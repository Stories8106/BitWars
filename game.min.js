/*! Built with IMPACT - impactjs.com */

(function(window){"use strict";Number.prototype.map=function(istart,istop,ostart,ostop){return ostart+(ostop-ostart)*((this-istart)/(istop-istart));};Number.prototype.limit=function(min,max){return Math.min(max,Math.max(min,this));};Number.prototype.round=function(precision){precision=Math.pow(10,precision||0);return Math.round(this*precision)/precision;};Number.prototype.floor=function(){return Math.floor(this);};Number.prototype.ceil=function(){return Math.ceil(this);};Number.prototype.toInt=function(){return(this|0);};Number.prototype.toRad=function(){return(this/180)*Math.PI;};Number.prototype.toDeg=function(){return(this*180)/Math.PI;};Array.prototype.erase=function(item){for(var i=this.length;i--;){if(this[i]===item){this.splice(i,1);}}
return this;};Array.prototype.random=function(){return this[Math.floor(Math.random()*this.length)];};Function.prototype.bind=Function.prototype.bind||function(oThis){if(typeof this!=="function"){throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");}
var aArgs=Array.prototype.slice.call(arguments,1),fToBind=this,fNOP=function(){},fBound=function(){return fToBind.apply((this instanceof fNOP&&oThis?this:oThis),aArgs.concat(Array.prototype.slice.call(arguments)));};fNOP.prototype=this.prototype;fBound.prototype=new fNOP();return fBound;};window.ig={game:null,debug:null,version:'1.23',global:window,modules:{},resources:[],ready:false,baked:false,nocache:'',ua:{},prefix:(window.ImpactPrefix||''),lib:'lib/',_current:null,_loadQueue:[],_waitForOnload:0,$:function(selector){return selector.charAt(0)=='#'?document.getElementById(selector.substr(1)):document.getElementsByTagName(selector);},$new:function(name){return document.createElement(name);},copy:function(object){if(!object||typeof(object)!='object'||object instanceof HTMLElement||object instanceof ig.Class){return object;}
else if(object instanceof Array){var c=[];for(var i=0,l=object.length;i<l;i++){c[i]=ig.copy(object[i]);}
return c;}
else{var c={};for(var i in object){c[i]=ig.copy(object[i]);}
return c;}},merge:function(original,extended){for(var key in extended){var ext=extended[key];if(typeof(ext)!='object'||ext instanceof HTMLElement||ext instanceof ig.Class||ext===null){original[key]=ext;}
else{if(!original[key]||typeof(original[key])!='object'){original[key]=(ext instanceof Array)?[]:{};}
ig.merge(original[key],ext);}}
return original;},ksort:function(obj){if(!obj||typeof(obj)!='object'){return[];}
var keys=[],values=[];for(var i in obj){keys.push(i);}
keys.sort();for(var i=0;i<keys.length;i++){values.push(obj[keys[i]]);}
return values;},setVendorAttribute:function(el,attr,val){var uc=attr.charAt(0).toUpperCase()+attr.substr(1);el[attr]=el['ms'+uc]=el['moz'+uc]=el['webkit'+uc]=el['o'+uc]=val;},getVendorAttribute:function(el,attr){var uc=attr.charAt(0).toUpperCase()+attr.substr(1);return el[attr]||el['ms'+uc]||el['moz'+uc]||el['webkit'+uc]||el['o'+uc];},normalizeVendorAttribute:function(el,attr){var prefixedVal=ig.getVendorAttribute(el,attr);if(!el[attr]&&prefixedVal){el[attr]=prefixedVal;}},getImagePixels:function(image,x,y,width,height){var canvas=ig.$new('canvas');canvas.width=image.width;canvas.height=image.height;var ctx=canvas.getContext('2d');ig.System.SCALE.CRISP(canvas,ctx);var ratio=ig.getVendorAttribute(ctx,'backingStorePixelRatio')||1;ig.normalizeVendorAttribute(ctx,'getImageDataHD');var realWidth=image.width/ratio,realHeight=image.height/ratio;canvas.width=Math.ceil(realWidth);canvas.height=Math.ceil(realHeight);ctx.drawImage(image,0,0,realWidth,realHeight);return(ratio===1)?ctx.getImageData(x,y,width,height):ctx.getImageDataHD(x,y,width,height);},module:function(name){if(ig._current){throw("Module '"+ig._current.name+"' defines nothing");}
if(ig.modules[name]&&ig.modules[name].body){throw("Module '"+name+"' is already defined");}
ig._current={name:name,requires:[],loaded:false,body:null};ig.modules[name]=ig._current;ig._loadQueue.push(ig._current);return ig;},requires:function(){ig._current.requires=Array.prototype.slice.call(arguments);return ig;},defines:function(body){ig._current.body=body;ig._current=null;ig._initDOMReady();},addResource:function(resource){ig.resources.push(resource);},setNocache:function(set){ig.nocache=set?'?'+Date.now():'';},log:function(){},assert:function(condition,msg){},show:function(name,number){},mark:function(msg,color){},_loadScript:function(name,requiredFrom){ig.modules[name]={name:name,requires:[],loaded:false,body:null};ig._waitForOnload++;var path=ig.prefix+ig.lib+name.replace(/\./g,'/')+'.js'+ig.nocache;var script=ig.$new('script');script.type='text/javascript';script.src=path;script.onload=function(){ig._waitForOnload--;ig._execModules();};script.onerror=function(){throw('Failed to load module '+name+' at '+path+' '+'required from '+requiredFrom);};ig.$('head')[0].appendChild(script);},_execModules:function(){var modulesLoaded=false;for(var i=0;i<ig._loadQueue.length;i++){var m=ig._loadQueue[i];var dependenciesLoaded=true;for(var j=0;j<m.requires.length;j++){var name=m.requires[j];if(!ig.modules[name]){dependenciesLoaded=false;ig._loadScript(name,m.name);}
else if(!ig.modules[name].loaded){dependenciesLoaded=false;}}
if(dependenciesLoaded&&m.body){ig._loadQueue.splice(i,1);m.loaded=true;m.body();modulesLoaded=true;i--;}}
if(modulesLoaded){ig._execModules();}
else if(!ig.baked&&ig._waitForOnload==0&&ig._loadQueue.length!=0){var unresolved=[];for(var i=0;i<ig._loadQueue.length;i++){var unloaded=[];var requires=ig._loadQueue[i].requires;for(var j=0;j<requires.length;j++){var m=ig.modules[requires[j]];if(!m||!m.loaded){unloaded.push(requires[j]);}}
unresolved.push(ig._loadQueue[i].name+' (requires: '+unloaded.join(', ')+')');}
throw("Unresolved (or circular?) dependencies. "+"Most likely there's a name/path mismatch for one of the listed modules "+"or a previous syntax error prevents a module from loading:\n"+
unresolved.join('\n'));}},_DOMReady:function(){if(!ig.modules['dom.ready'].loaded){if(!document.body){return setTimeout(ig._DOMReady,13);}
ig.modules['dom.ready'].loaded=true;ig._waitForOnload--;ig._execModules();}
return 0;},_boot:function(){if(document.location.href.match(/\?nocache/)){ig.setNocache(true);}
ig.ua.pixelRatio=window.devicePixelRatio||1;ig.ua.viewport={width:window.innerWidth,height:window.innerHeight};ig.ua.screen={width:window.screen.availWidth*ig.ua.pixelRatio,height:window.screen.availHeight*ig.ua.pixelRatio};ig.ua.iPhone=/iPhone/i.test(navigator.userAgent);ig.ua.iPhone4=(ig.ua.iPhone&&ig.ua.pixelRatio==2);ig.ua.iPad=/iPad/i.test(navigator.userAgent);ig.ua.android=/android/i.test(navigator.userAgent);ig.ua.winPhone=/Windows Phone/i.test(navigator.userAgent);ig.ua.iOS=ig.ua.iPhone||ig.ua.iPad;ig.ua.mobile=ig.ua.iOS||ig.ua.android||ig.ua.winPhone||/mobile/i.test(navigator.userAgent);ig.ua.touchDevice=(('ontouchstart'in window)||(window.navigator.msMaxTouchPoints));},_initDOMReady:function(){if(ig.modules['dom.ready']){ig._execModules();return;}
ig._boot();ig.modules['dom.ready']={requires:[],loaded:false,body:null};ig._waitForOnload++;if(document.readyState==='complete'){ig._DOMReady();}
else{document.addEventListener('DOMContentLoaded',ig._DOMReady,false);window.addEventListener('load',ig._DOMReady,false);}}};ig.normalizeVendorAttribute(window,'requestAnimationFrame');if(window.requestAnimationFrame){var next=1,anims={};window.ig.setAnimation=function(callback,element){var current=next++;anims[current]=true;var animate=function(){if(!anims[current]){return;}
window.requestAnimationFrame(animate,element);callback();};window.requestAnimationFrame(animate,element);return current;};window.ig.clearAnimation=function(id){delete anims[id];};}
else{window.ig.setAnimation=function(callback,element){return window.setInterval(callback,1000/60);};window.ig.clearAnimation=function(id){window.clearInterval(id);};}
var initializing=false,fnTest=/xyz/.test(function(){xyz;})?/\bparent\b/:/.*/;var lastClassId=0;window.ig.Class=function(){};var inject=function(prop){var proto=this.prototype;var parent={};for(var name in prop){if(typeof(prop[name])=="function"&&typeof(proto[name])=="function"&&fnTest.test(prop[name])){parent[name]=proto[name];proto[name]=(function(name,fn){return function(){var tmp=this.parent;this.parent=parent[name];var ret=fn.apply(this,arguments);this.parent=tmp;return ret;};})(name,prop[name]);}
else{proto[name]=prop[name];}}};window.ig.Class.extend=function(prop){var parent=this.prototype;initializing=true;var prototype=new this();initializing=false;for(var name in prop){if(typeof(prop[name])=="function"&&typeof(parent[name])=="function"&&fnTest.test(prop[name])){prototype[name]=(function(name,fn){return function(){var tmp=this.parent;this.parent=parent[name];var ret=fn.apply(this,arguments);this.parent=tmp;return ret;};})(name,prop[name]);}
else{prototype[name]=prop[name];}}
function Class(){if(!initializing){if(this.staticInstantiate){var obj=this.staticInstantiate.apply(this,arguments);if(obj){return obj;}}
for(var p in this){if(typeof(this[p])=='object'){this[p]=ig.copy(this[p]);}}
if(this.init){this.init.apply(this,arguments);}}
return this;}
Class.prototype=prototype;Class.prototype.constructor=Class;Class.extend=window.ig.Class.extend;Class.inject=inject;Class.classId=prototype.classId=++lastClassId;return Class;};if(window.ImpactMixin){ig.merge(ig,window.ImpactMixin);}})(window);

// lib/impact/image.js
ig.baked=true;ig.module('impact.image').defines(function(){"use strict";ig.Image=ig.Class.extend({data:null,width:0,height:0,loaded:false,failed:false,loadCallback:null,path:'',staticInstantiate:function(path){return ig.Image.cache[path]||null;},init:function(path){this.path=path;this.load();},load:function(loadCallback){if(this.loaded){if(loadCallback){loadCallback(this.path,true);}
return;}
else if(!this.loaded&&ig.ready){this.loadCallback=loadCallback||null;this.data=new Image();this.data.onload=this.onload.bind(this);this.data.onerror=this.onerror.bind(this);this.data.src=ig.prefix+this.path+ig.nocache;}
else{ig.addResource(this);}
ig.Image.cache[this.path]=this;},reload:function(){this.loaded=false;this.data=new Image();this.data.onload=this.onload.bind(this);this.data.src=this.path+'?'+Date.now();},onload:function(event){this.width=this.data.width;this.height=this.data.height;this.loaded=true;if(ig.system.scale!=1){this.resize(ig.system.scale);}
if(this.loadCallback){this.loadCallback(this.path,true);}},onerror:function(event){this.failed=true;if(this.loadCallback){this.loadCallback(this.path,false);}},resize:function(scale){var origPixels=ig.getImagePixels(this.data,0,0,this.width,this.height);var widthScaled=this.width*scale;var heightScaled=this.height*scale;var scaled=ig.$new('canvas');scaled.width=widthScaled;scaled.height=heightScaled;var scaledCtx=scaled.getContext('2d');var scaledPixels=scaledCtx.getImageData(0,0,widthScaled,heightScaled);for(var y=0;y<heightScaled;y++){for(var x=0;x<widthScaled;x++){var index=(Math.floor(y/scale)*this.width+Math.floor(x/scale))*4;var indexScaled=(y*widthScaled+x)*4;scaledPixels.data[indexScaled]=origPixels.data[index];scaledPixels.data[indexScaled+1]=origPixels.data[index+1];scaledPixels.data[indexScaled+2]=origPixels.data[index+2];scaledPixels.data[indexScaled+3]=origPixels.data[index+3];}}
scaledCtx.putImageData(scaledPixels,0,0);this.data=scaled;},draw:function(targetX,targetY,sourceX,sourceY,width,height){if(!this.loaded){return;}
var scale=ig.system.scale;sourceX=sourceX?sourceX*scale:0;sourceY=sourceY?sourceY*scale:0;width=(width?width:this.width)*scale;height=(height?height:this.height)*scale;ig.system.context.drawImage(this.data,sourceX,sourceY,width,height,ig.system.getDrawPos(targetX),ig.system.getDrawPos(targetY),width,height);ig.Image.drawCount++;},drawTile:function(targetX,targetY,tile,tileWidth,tileHeight,flipX,flipY){tileHeight=tileHeight?tileHeight:tileWidth;if(!this.loaded||tileWidth>this.width||tileHeight>this.height){return;}
var scale=ig.system.scale;var tileWidthScaled=Math.floor(tileWidth*scale);var tileHeightScaled=Math.floor(tileHeight*scale);var scaleX=flipX?-1:1;var scaleY=flipY?-1:1;if(flipX||flipY){ig.system.context.save();ig.system.context.scale(scaleX,scaleY);}
ig.system.context.drawImage(this.data,(Math.floor(tile*tileWidth)%this.width)*scale,(Math.floor(tile*tileWidth/this.width)*tileHeight)*scale,tileWidthScaled,tileHeightScaled,ig.system.getDrawPos(targetX)*scaleX-(flipX?tileWidthScaled:0),ig.system.getDrawPos(targetY)*scaleY-(flipY?tileHeightScaled:0),tileWidthScaled,tileHeightScaled);if(flipX||flipY){ig.system.context.restore();}
ig.Image.drawCount++;}});ig.Image.drawCount=0;ig.Image.cache={};ig.Image.reloadCache=function(){for(var path in ig.Image.cache){ig.Image.cache[path].reload();}};});

// lib/impact/font.js
ig.baked=true;ig.module('impact.font').requires('impact.image').defines(function(){"use strict";ig.Font=ig.Image.extend({widthMap:[],indices:[],firstChar:32,alpha:1,letterSpacing:1,lineSpacing:0,onload:function(ev){this._loadMetrics(this.data);this.parent(ev);},widthForString:function(text){if(text.indexOf('\n')!==-1){var lines=text.split('\n');var width=0;for(var i=0;i<lines.length;i++){width=Math.max(width,this._widthForLine(lines[i]));}
return width;}
else{return this._widthForLine(text);}},_widthForLine:function(text){var width=0;for(var i=0;i<text.length;i++){width+=this.widthMap[text.charCodeAt(i)-this.firstChar]+this.letterSpacing;}
return width;},heightForString:function(text){return text.split('\n').length*(this.height+this.lineSpacing);},draw:function(text,x,y,align){if(typeof(text)!='string'){text=text.toString();}
if(text.indexOf('\n')!==-1){var lines=text.split('\n');var lineHeight=this.height+this.lineSpacing;for(var i=0;i<lines.length;i++){this.draw(lines[i],x,y+i*lineHeight,align);}
return;}
if(align==ig.Font.ALIGN.RIGHT||align==ig.Font.ALIGN.CENTER){var width=this._widthForLine(text);x-=align==ig.Font.ALIGN.CENTER?width/2:width;}
if(this.alpha!==1){ig.system.context.globalAlpha=this.alpha;}
for(var i=0;i<text.length;i++){var c=text.charCodeAt(i);x+=this._drawChar(c-this.firstChar,x,y);}
if(this.alpha!==1){ig.system.context.globalAlpha=1;}
ig.Image.drawCount+=text.length;},_drawChar:function(c,targetX,targetY){if(!this.loaded||c<0||c>=this.indices.length){return 0;}
var scale=ig.system.scale;var charX=this.indices[c]*scale;var charY=0;var charWidth=this.widthMap[c]*scale;var charHeight=(this.height-2)*scale;ig.system.context.drawImage(this.data,charX,charY,charWidth,charHeight,ig.system.getDrawPos(targetX),ig.system.getDrawPos(targetY),charWidth,charHeight);return this.widthMap[c]+this.letterSpacing;},_loadMetrics:function(image){this.height=image.height-1;this.widthMap=[];this.indices=[];var px=ig.getImagePixels(image,0,image.height-1,image.width,1);var currentChar=0;var currentWidth=0;for(var x=0;x<image.width;x++){var index=x*4+3;if(px.data[index]>127){currentWidth++;}
else if(px.data[index]<128&&currentWidth){this.widthMap.push(currentWidth);this.indices.push(x-currentWidth);currentChar++;currentWidth=0;}}
this.widthMap.push(currentWidth);this.indices.push(x-currentWidth);}});ig.Font.ALIGN={LEFT:0,RIGHT:1,CENTER:2};});

// lib/impact/sound.js
ig.baked=true;ig.module('impact.sound').defines(function(){"use strict";ig.SoundManager=ig.Class.extend({clips:{},volume:1,format:null,init:function(){if(!ig.Sound.enabled||!window.Audio){ig.Sound.enabled=false;return;}
var probe=new Audio();for(var i=0;i<ig.Sound.use.length;i++){var format=ig.Sound.use[i];if(probe.canPlayType(format.mime)){this.format=format;break;}}
if(!this.format){ig.Sound.enabled=false;}},load:function(path,multiChannel,loadCallback){var realPath=ig.prefix+path.replace(/[^\.]+$/,this.format.ext)+ig.nocache;if(this.clips[path]){if(multiChannel&&this.clips[path].length<ig.Sound.channels){for(var i=this.clips[path].length;i<ig.Sound.channels;i++){var a=new Audio(realPath);a.load();this.clips[path].push(a);}}
return this.clips[path][0];}
var clip=new Audio(realPath);if(loadCallback){clip.addEventListener('canplaythrough',function cb(ev){clip.removeEventListener('canplaythrough',cb,false);loadCallback(path,true,ev);},false);clip.addEventListener('error',function(ev){loadCallback(path,false,ev);},false);}
clip.preload='auto';clip.load();this.clips[path]=[clip];if(multiChannel){for(var i=1;i<ig.Sound.channels;i++){var a=new Audio(realPath);a.load();this.clips[path].push(a);}}
return clip;},get:function(path){var channels=this.clips[path];for(var i=0,clip;clip=channels[i++];){if(clip.paused||clip.ended){if(clip.ended){clip.currentTime=0;}
return clip;}}
channels[0].pause();channels[0].currentTime=0;return channels[0];}});ig.Music=ig.Class.extend({tracks:[],namedTracks:{},currentTrack:null,currentIndex:0,random:false,_volume:1,_loop:false,_fadeInterval:0,_fadeTimer:null,_endedCallbackBound:null,init:function(){this._endedCallbackBound=this._endedCallback.bind(this);if(Object.defineProperty){Object.defineProperty(this,"volume",{get:this.getVolume.bind(this),set:this.setVolume.bind(this)});Object.defineProperty(this,"loop",{get:this.getLooping.bind(this),set:this.setLooping.bind(this)});}
else if(this.__defineGetter__){this.__defineGetter__('volume',this.getVolume.bind(this));this.__defineSetter__('volume',this.setVolume.bind(this));this.__defineGetter__('loop',this.getLooping.bind(this));this.__defineSetter__('loop',this.setLooping.bind(this));}},add:function(music,name){if(!ig.Sound.enabled){return;}
var path=music instanceof ig.Sound?music.path:music;var track=ig.soundManager.load(path,false);track.loop=this._loop;track.volume=this._volume;track.addEventListener('ended',this._endedCallbackBound,false);this.tracks.push(track);if(name){this.namedTracks[name]=track;}
if(!this.currentTrack){this.currentTrack=track;}},next:function(){if(!this.tracks.length){return;}
this.stop();this.currentIndex=this.random?Math.floor(Math.random()*this.tracks.length):(this.currentIndex+1)%this.tracks.length;this.currentTrack=this.tracks[this.currentIndex];this.play();},pause:function(){if(!this.currentTrack){return;}
this.currentTrack.pause();},stop:function(){if(!this.currentTrack){return;}
this.currentTrack.pause();this.currentTrack.currentTime=0;},play:function(name){if(name&&this.namedTracks[name]){var newTrack=this.namedTracks[name];if(newTrack!=this.currentTrack){this.stop();this.currentTrack=newTrack;}}
else if(!this.currentTrack){return;}
this.currentTrack.play();},getLooping:function(){return this._loop;},setLooping:function(l){this._loop=l;for(var i in this.tracks){this.tracks[i].loop=l;}},getVolume:function(){return this._volume;},setVolume:function(v){this._volume=v.limit(0,1);for(var i in this.tracks){this.tracks[i].volume=this._volume;}},fadeOut:function(time){if(!this.currentTrack){return;}
clearInterval(this._fadeInterval);this.fadeTimer=new ig.Timer(time);this._fadeInterval=setInterval(this._fadeStep.bind(this),50);},_fadeStep:function(){var v=this.fadeTimer.delta().map(-this.fadeTimer.target,0,1,0).limit(0,1)*this._volume;if(v<=0.01){this.stop();this.currentTrack.volume=this._volume;clearInterval(this._fadeInterval);}
else{this.currentTrack.volume=v;}},_endedCallback:function(){if(this._loop){this.play();}
else{this.next();}}});ig.Sound=ig.Class.extend({path:'',volume:1,currentClip:null,multiChannel:true,init:function(path,multiChannel){this.path=path;this.multiChannel=(multiChannel!==false);this.load();},load:function(loadCallback){if(!ig.Sound.enabled){if(loadCallback){loadCallback(this.path,true);}
return;}
if(ig.ready){ig.soundManager.load(this.path,this.multiChannel,loadCallback);}
else{ig.addResource(this);}},play:function(){if(!ig.Sound.enabled){return;}
this.currentClip=ig.soundManager.get(this.path);this.currentClip.volume=ig.soundManager.volume*this.volume;this.currentClip.play();},stop:function(){if(this.currentClip){this.currentClip.pause();this.currentClip.currentTime=0;}}});ig.Sound.FORMAT={MP3:{ext:'mp3',mime:'audio/mpeg'},M4A:{ext:'m4a',mime:'audio/mp4; codecs=mp4a'},OGG:{ext:'ogg',mime:'audio/ogg; codecs=vorbis'},WEBM:{ext:'webm',mime:'audio/webm; codecs=vorbis'},CAF:{ext:'caf',mime:'audio/x-caf'}};ig.Sound.use=[ig.Sound.FORMAT.OGG,ig.Sound.FORMAT.MP3];ig.Sound.channels=4;ig.Sound.enabled=true;});

// lib/impact/loader.js
ig.baked=true;ig.module('impact.loader').requires('impact.image','impact.font','impact.sound').defines(function(){"use strict";ig.Loader=ig.Class.extend({resources:[],gameClass:null,status:0,done:false,_unloaded:[],_drawStatus:0,_intervalId:0,_loadCallbackBound:null,init:function(gameClass,resources){this.gameClass=gameClass;this.resources=resources;this._loadCallbackBound=this._loadCallback.bind(this);for(var i=0;i<this.resources.length;i++){this._unloaded.push(this.resources[i].path);}},load:function(){ig.system.clear('#000');if(!this.resources.length){this.end();return;}
for(var i=0;i<this.resources.length;i++){this.loadResource(this.resources[i]);}
this._intervalId=setInterval(this.draw.bind(this),16);},loadResource:function(res){res.load(this._loadCallbackBound);},end:function(){if(this.done){return;}
this.done=true;clearInterval(this._intervalId);ig.system.setGame(this.gameClass);},draw:function(){this._drawStatus+=(this.status-this._drawStatus)/5;var s=ig.system.scale;var w=ig.system.width*0.6;var h=ig.system.height*0.1;var x=ig.system.width*0.5-w/2;var y=ig.system.height*0.5-h/2;ig.system.context.fillStyle='#000';ig.system.context.fillRect(0,0,480,320);ig.system.context.fillStyle='#fff';ig.system.context.fillRect(x*s,y*s,w*s,h*s);ig.system.context.fillStyle='#000';ig.system.context.fillRect(x*s+s,y*s+s,w*s-s-s,h*s-s-s);ig.system.context.fillStyle='#fff';ig.system.context.fillRect(x*s,y*s,w*s*this._drawStatus,h*s);},_loadCallback:function(path,status){if(status){this._unloaded.erase(path);}
else{throw('Failed to load resource: '+path);}
this.status=1-(this._unloaded.length/this.resources.length);if(this._unloaded.length==0){setTimeout(this.end.bind(this),250);}}});});

// lib/impact/timer.js
ig.baked=true;ig.module('impact.timer').defines(function(){"use strict";ig.Timer=ig.Class.extend({target:0,base:0,last:0,pausedAt:0,init:function(seconds){this.base=ig.Timer.time;this.last=ig.Timer.time;this.target=seconds||0;},set:function(seconds){this.target=seconds||0;this.base=ig.Timer.time;this.pausedAt=0;},reset:function(){this.base=ig.Timer.time;this.pausedAt=0;},tick:function(){var delta=ig.Timer.time-this.last;this.last=ig.Timer.time;return(this.pausedAt?0:delta);},delta:function(){return(this.pausedAt||ig.Timer.time)-this.base-this.target;},pause:function(){if(!this.pausedAt){this.pausedAt=ig.Timer.time;}},unpause:function(){if(this.pausedAt){this.base+=ig.Timer.time-this.pausedAt;this.pausedAt=0;}}});ig.Timer._last=0;ig.Timer.time=Number.MIN_VALUE;ig.Timer.timeScale=1;ig.Timer.maxStep=0.05;ig.Timer.step=function(){var current=Date.now();var delta=(current-ig.Timer._last)/1000;ig.Timer.time+=Math.min(delta,ig.Timer.maxStep)*ig.Timer.timeScale;ig.Timer._last=current;};});

// lib/impact/system.js
ig.baked=true;ig.module('impact.system').requires('impact.timer','impact.image').defines(function(){"use strict";ig.System=ig.Class.extend({fps:30,width:320,height:240,realWidth:320,realHeight:240,scale:1,tick:0,animationId:0,newGameClass:null,running:false,delegate:null,clock:null,canvas:null,context:null,init:function(canvasId,fps,width,height,scale){this.fps=fps;this.clock=new ig.Timer();this.canvas=ig.$(canvasId);this.resize(width,height,scale);this.context=this.canvas.getContext('2d');this.getDrawPos=ig.System.drawMode;if(this.scale!=1){ig.System.scaleMode=ig.System.SCALE.CRISP;}
ig.System.scaleMode(this.canvas,this.context);},resize:function(width,height,scale){this.width=width;this.height=height;this.scale=scale||this.scale;this.realWidth=this.width*this.scale;this.realHeight=this.height*this.scale;this.canvas.width=this.realWidth;this.canvas.height=this.realHeight;},setGame:function(gameClass){if(this.running){this.newGameClass=gameClass;}
else{this.setGameNow(gameClass);}},setGameNow:function(gameClass){ig.game=new(gameClass)();ig.system.setDelegate(ig.game);},setDelegate:function(object){if(typeof(object.run)=='function'){this.delegate=object;this.startRunLoop();}else{throw('System.setDelegate: No run() function in object');}},stopRunLoop:function(){ig.clearAnimation(this.animationId);this.running=false;},startRunLoop:function(){this.stopRunLoop();this.animationId=ig.setAnimation(this.run.bind(this),this.canvas);this.running=true;},clear:function(color){this.context.fillStyle=color;this.context.fillRect(0,0,this.realWidth,this.realHeight);},run:function(){ig.Timer.step();this.tick=this.clock.tick();this.delegate.run();ig.input.clearPressed();if(this.newGameClass){this.setGameNow(this.newGameClass);this.newGameClass=null;}},getDrawPos:null});ig.System.DRAW={AUTHENTIC:function(p){return Math.round(p)*this.scale;},SMOOTH:function(p){return Math.round(p*this.scale);},SUBPIXEL:function(p){return p*this.scale;}};ig.System.drawMode=ig.System.DRAW.SMOOTH;ig.System.SCALE={CRISP:function(canvas,context){ig.setVendorAttribute(context,'imageSmoothingEnabled',false);canvas.style.imageRendering='-moz-crisp-edges';canvas.style.imageRendering='-o-crisp-edges';canvas.style.imageRendering='-webkit-optimize-contrast';canvas.style.imageRendering='crisp-edges';canvas.style.msInterpolationMode='nearest-neighbor';},SMOOTH:function(canvas,context){ig.setVendorAttribute(context,'imageSmoothingEnabled',true);canvas.style.imageRendering='';canvas.style.msInterpolationMode='';}};ig.System.scaleMode=ig.System.SCALE.SMOOTH;});

// lib/impact/input.js
ig.baked=true;ig.module('impact.input').defines(function(){"use strict";ig.KEY={'MOUSE1':-1,'MOUSE2':-3,'MWHEEL_UP':-4,'MWHEEL_DOWN':-5,'BACKSPACE':8,'TAB':9,'ENTER':13,'PAUSE':19,'CAPS':20,'ESC':27,'SPACE':32,'PAGE_UP':33,'PAGE_DOWN':34,'END':35,'HOME':36,'LEFT_ARROW':37,'UP_ARROW':38,'RIGHT_ARROW':39,'DOWN_ARROW':40,'INSERT':45,'DELETE':46,'_0':48,'_1':49,'_2':50,'_3':51,'_4':52,'_5':53,'_6':54,'_7':55,'_8':56,'_9':57,'A':65,'B':66,'C':67,'D':68,'E':69,'F':70,'G':71,'H':72,'I':73,'J':74,'K':75,'L':76,'M':77,'N':78,'O':79,'P':80,'Q':81,'R':82,'S':83,'T':84,'U':85,'V':86,'W':87,'X':88,'Y':89,'Z':90,'NUMPAD_0':96,'NUMPAD_1':97,'NUMPAD_2':98,'NUMPAD_3':99,'NUMPAD_4':100,'NUMPAD_5':101,'NUMPAD_6':102,'NUMPAD_7':103,'NUMPAD_8':104,'NUMPAD_9':105,'MULTIPLY':106,'ADD':107,'SUBSTRACT':109,'DECIMAL':110,'DIVIDE':111,'F1':112,'F2':113,'F3':114,'F4':115,'F5':116,'F6':117,'F7':118,'F8':119,'F9':120,'F10':121,'F11':122,'F12':123,'SHIFT':16,'CTRL':17,'ALT':18,'PLUS':187,'COMMA':188,'MINUS':189,'PERIOD':190};ig.Input=ig.Class.extend({bindings:{},actions:{},presses:{},locks:{},delayedKeyup:{},isUsingMouse:false,isUsingKeyboard:false,isUsingAccelerometer:false,mouse:{x:0,y:0},accel:{x:0,y:0,z:0},initMouse:function(){if(this.isUsingMouse){return;}
this.isUsingMouse=true;var mouseWheelBound=this.mousewheel.bind(this);ig.system.canvas.addEventListener('mousewheel',mouseWheelBound,false);ig.system.canvas.addEventListener('DOMMouseScroll',mouseWheelBound,false);ig.system.canvas.addEventListener('contextmenu',this.contextmenu.bind(this),false);ig.system.canvas.addEventListener('mousedown',this.keydown.bind(this),false);ig.system.canvas.addEventListener('mouseup',this.keyup.bind(this),false);ig.system.canvas.addEventListener('mousemove',this.mousemove.bind(this),false);if(ig.ua.touchDevice){ig.system.canvas.addEventListener('touchstart',this.keydown.bind(this),false);ig.system.canvas.addEventListener('touchend',this.keyup.bind(this),false);ig.system.canvas.addEventListener('touchmove',this.mousemove.bind(this),false);ig.system.canvas.addEventListener('MSPointerDown',this.keydown.bind(this),false);ig.system.canvas.addEventListener('MSPointerUp',this.keyup.bind(this),false);ig.system.canvas.addEventListener('MSPointerMove',this.mousemove.bind(this),false);ig.system.canvas.style.msTouchAction='none';}},initKeyboard:function(){if(this.isUsingKeyboard){return;}
this.isUsingKeyboard=true;window.addEventListener('keydown',this.keydown.bind(this),false);window.addEventListener('keyup',this.keyup.bind(this),false);},initAccelerometer:function(){if(this.isUsingAccelerometer){return;}
window.addEventListener('devicemotion',this.devicemotion.bind(this),false);},mousewheel:function(event){var delta=event.wheelDelta?event.wheelDelta:(event.detail*-1);var code=delta>0?ig.KEY.MWHEEL_UP:ig.KEY.MWHEEL_DOWN;var action=this.bindings[code];if(action){this.actions[action]=true;this.presses[action]=true;this.delayedKeyup[action]=true;event.stopPropagation();event.preventDefault();}},mousemove:function(event){var internalWidth=parseInt(ig.system.canvas.offsetWidth)||ig.system.realWidth;var scale=ig.system.scale*(internalWidth/ig.system.realWidth);var pos={left:0,top:0};if(ig.system.canvas.getBoundingClientRect){pos=ig.system.canvas.getBoundingClientRect();}
var ev=event.touches?event.touches[0]:event;this.mouse.x=(ev.clientX-pos.left)/scale;this.mouse.y=(ev.clientY-pos.top)/scale;},contextmenu:function(event){if(this.bindings[ig.KEY.MOUSE2]){event.stopPropagation();event.preventDefault();}},keydown:function(event){var tag=event.target.tagName;if(tag=='INPUT'||tag=='TEXTAREA'){return;}
var code=event.type=='keydown'?event.keyCode:(event.button==2?ig.KEY.MOUSE2:ig.KEY.MOUSE1);if(event.type=='touchstart'||event.type=='mousedown'){this.mousemove(event);}
var action=this.bindings[code];if(action){this.actions[action]=true;if(!this.locks[action]){this.presses[action]=true;this.locks[action]=true;}
event.stopPropagation();event.preventDefault();}},keyup:function(event){var tag=event.target.tagName;if(tag=='INPUT'||tag=='TEXTAREA'){return;}
var code=event.type=='keyup'?event.keyCode:(event.button==2?ig.KEY.MOUSE2:ig.KEY.MOUSE1);var action=this.bindings[code];if(action){this.delayedKeyup[action]=true;event.stopPropagation();event.preventDefault();}},devicemotion:function(event){this.accel=event.accelerationIncludingGravity;},bind:function(key,action){if(key<0){this.initMouse();}
else if(key>0){this.initKeyboard();}
this.bindings[key]=action;},bindTouch:function(selector,action){var element=ig.$(selector);var that=this;element.addEventListener('touchstart',function(ev){that.touchStart(ev,action);},false);element.addEventListener('touchend',function(ev){that.touchEnd(ev,action);},false);element.addEventListener('MSPointerDown',function(ev){that.touchStart(ev,action);},false);element.addEventListener('MSPointerUp',function(ev){that.touchEnd(ev,action);},false);},unbind:function(key){var action=this.bindings[key];this.delayedKeyup[action]=true;this.bindings[key]=null;},unbindAll:function(){this.bindings={};this.actions={};this.presses={};this.locks={};this.delayedKeyup={};},state:function(action){return this.actions[action];},pressed:function(action){return this.presses[action];},released:function(action){return!!this.delayedKeyup[action];},clearPressed:function(){for(var action in this.delayedKeyup){this.actions[action]=false;this.locks[action]=false;}
this.delayedKeyup={};this.presses={};},touchStart:function(event,action){this.actions[action]=true;this.presses[action]=true;event.stopPropagation();event.preventDefault();return false;},touchEnd:function(event,action){this.delayedKeyup[action]=true;event.stopPropagation();event.preventDefault();return false;}});});

// lib/impact/impact.js
ig.baked=true;ig.module('impact.impact').requires('dom.ready','impact.loader','impact.system','impact.input','impact.sound').defines(function(){"use strict";ig.main=function(canvasId,gameClass,fps,width,height,scale,loaderClass){ig.system=new ig.System(canvasId,fps,width,height,scale||1);ig.input=new ig.Input();ig.soundManager=new ig.SoundManager();ig.music=new ig.Music();ig.ready=true;var loader=new(loaderClass||ig.Loader)(gameClass,ig.resources);loader.load();};});

// lib/impact/animation.js
ig.baked=true;ig.module('impact.animation').requires('impact.timer','impact.image').defines(function(){"use strict";ig.AnimationSheet=ig.Class.extend({width:8,height:8,image:null,init:function(path,width,height){this.width=width;this.height=height;this.image=new ig.Image(path);}});ig.Animation=ig.Class.extend({sheet:null,timer:null,sequence:[],flip:{x:false,y:false},pivot:{x:0,y:0},frame:0,tile:0,loopCount:0,alpha:1,angle:0,init:function(sheet,frameTime,sequence,stop){this.sheet=sheet;this.pivot={x:sheet.width/2,y:sheet.height/2};this.timer=new ig.Timer();this.frameTime=frameTime;this.sequence=sequence;this.stop=!!stop;this.tile=this.sequence[0];},rewind:function(){this.timer.set();this.loopCount=0;this.frame=0;this.tile=this.sequence[0];return this;},gotoFrame:function(f){this.timer.set(this.frameTime*-f-0.0001);this.update();},gotoRandomFrame:function(){this.gotoFrame(Math.floor(Math.random()*this.sequence.length))},update:function(){var frameTotal=Math.floor(this.timer.delta()/this.frameTime);this.loopCount=Math.floor(frameTotal/this.sequence.length);if(this.stop&&this.loopCount>0){this.frame=this.sequence.length-1;}
else{this.frame=frameTotal%this.sequence.length;}
this.tile=this.sequence[this.frame];},draw:function(targetX,targetY){var bbsize=Math.max(this.sheet.width,this.sheet.height);if(targetX>ig.system.width||targetY>ig.system.height||targetX+bbsize<0||targetY+bbsize<0){return;}
if(this.alpha!=1){ig.system.context.globalAlpha=this.alpha;}
if(this.angle==0){this.sheet.image.drawTile(targetX,targetY,this.tile,this.sheet.width,this.sheet.height,this.flip.x,this.flip.y);}
else{ig.system.context.save();ig.system.context.translate(ig.system.getDrawPos(targetX+this.pivot.x),ig.system.getDrawPos(targetY+this.pivot.y));ig.system.context.rotate(this.angle);this.sheet.image.drawTile(-this.pivot.x,-this.pivot.y,this.tile,this.sheet.width,this.sheet.height,this.flip.x,this.flip.y);ig.system.context.restore();}
if(this.alpha!=1){ig.system.context.globalAlpha=1;}}});});

// lib/impact/entity.js
ig.baked=true;ig.module('impact.entity').requires('impact.animation','impact.impact').defines(function(){"use strict";ig.Entity=ig.Class.extend({id:0,settings:{},size:{x:16,y:16},offset:{x:0,y:0},pos:{x:0,y:0},last:{x:0,y:0},vel:{x:0,y:0},accel:{x:0,y:0},friction:{x:0,y:0},maxVel:{x:100,y:100},zIndex:0,gravityFactor:1,standing:false,bounciness:0,minBounceVelocity:40,anims:{},animSheet:null,currentAnim:null,health:10,type:0,checkAgainst:0,collides:0,_killed:false,slopeStanding:{min:(44).toRad(),max:(136).toRad()},init:function(x,y,settings){this.id=++ig.Entity._lastId;this.pos.x=this.last.x=x;this.pos.y=this.last.y=y;ig.merge(this,settings);},reset:function(x,y,settings){var proto=this.constructor.prototype;this.pos.x=x;this.pos.y=y;this.last.x=x;this.last.y=y;this.vel.x=proto.vel.x;this.vel.y=proto.vel.y;this.accel.x=proto.accel.x;this.accel.y=proto.accel.y;this.health=proto.health;this._killed=proto._killed;this.standing=proto.standing;this.type=proto.type;this.checkAgainst=proto.checkAgainst;this.collides=proto.collides;ig.merge(this,settings);},addAnim:function(name,frameTime,sequence,stop){if(!this.animSheet){throw('No animSheet to add the animation '+name+' to.');}
var a=new ig.Animation(this.animSheet,frameTime,sequence,stop);this.anims[name]=a;if(!this.currentAnim){this.currentAnim=a;}
return a;},update:function(){this.last.x=this.pos.x;this.last.y=this.pos.y;this.vel.y+=ig.game.gravity*ig.system.tick*this.gravityFactor;this.vel.x=this.getNewVelocity(this.vel.x,this.accel.x,this.friction.x,this.maxVel.x);this.vel.y=this.getNewVelocity(this.vel.y,this.accel.y,this.friction.y,this.maxVel.y);var mx=this.vel.x*ig.system.tick;var my=this.vel.y*ig.system.tick;var res=ig.game.collisionMap.trace(this.pos.x,this.pos.y,mx,my,this.size.x,this.size.y);this.handleMovementTrace(res);if(this.currentAnim){this.currentAnim.update();}},getNewVelocity:function(vel,accel,friction,max){if(accel){return(vel+accel*ig.system.tick).limit(-max,max);}
else if(friction){var delta=friction*ig.system.tick;if(vel-delta>0){return vel-delta;}
else if(vel+delta<0){return vel+delta;}
else{return 0;}}
return vel.limit(-max,max);},handleMovementTrace:function(res){this.standing=false;if(res.collision.y){if(this.bounciness>0&&Math.abs(this.vel.y)>this.minBounceVelocity){this.vel.y*=-this.bounciness;}
else{if(this.vel.y>0){this.standing=true;}
this.vel.y=0;}}
if(res.collision.x){if(this.bounciness>0&&Math.abs(this.vel.x)>this.minBounceVelocity){this.vel.x*=-this.bounciness;}
else{this.vel.x=0;}}
if(res.collision.slope){var s=res.collision.slope;if(this.bounciness>0){var proj=this.vel.x*s.nx+this.vel.y*s.ny;this.vel.x=(this.vel.x-s.nx*proj*2)*this.bounciness;this.vel.y=(this.vel.y-s.ny*proj*2)*this.bounciness;}
else{var lengthSquared=s.x*s.x+s.y*s.y;var dot=(this.vel.x*s.x+this.vel.y*s.y)/lengthSquared;this.vel.x=s.x*dot;this.vel.y=s.y*dot;var angle=Math.atan2(s.x,s.y);if(angle>this.slopeStanding.min&&angle<this.slopeStanding.max){this.standing=true;}}}
this.pos=res.pos;},draw:function(){if(this.currentAnim){this.currentAnim.draw(this.pos.x-this.offset.x-ig.game._rscreen.x,this.pos.y-this.offset.y-ig.game._rscreen.y);}},kill:function(){ig.game.removeEntity(this);},receiveDamage:function(amount,from){this.health-=amount;if(this.health<=0){this.kill();}},touches:function(other){return!(this.pos.x>=other.pos.x+other.size.x||this.pos.x+this.size.x<=other.pos.x||this.pos.y>=other.pos.y+other.size.y||this.pos.y+this.size.y<=other.pos.y);},distanceTo:function(other){var xd=(this.pos.x+this.size.x/2)-(other.pos.x+other.size.x/2);var yd=(this.pos.y+this.size.y/2)-(other.pos.y+other.size.y/2);return Math.sqrt(xd*xd+yd*yd);},angleTo:function(other){return Math.atan2((other.pos.y+other.size.y/2)-(this.pos.y+this.size.y/2),(other.pos.x+other.size.x/2)-(this.pos.x+this.size.x/2));},check:function(other){},collideWith:function(other,axis){},ready:function(){},erase:function(){}});ig.Entity._lastId=0;ig.Entity.COLLIDES={NEVER:0,LITE:1,PASSIVE:2,ACTIVE:4,FIXED:8};ig.Entity.TYPE={NONE:0,A:1,B:2,BOTH:3};ig.Entity.checkPair=function(a,b){if(a.checkAgainst&b.type){a.check(b);}
if(b.checkAgainst&a.type){b.check(a);}
if(a.collides&&b.collides&&a.collides+b.collides>ig.Entity.COLLIDES.ACTIVE){ig.Entity.solveCollision(a,b);}};ig.Entity.solveCollision=function(a,b){var weak=null;if(a.collides==ig.Entity.COLLIDES.LITE||b.collides==ig.Entity.COLLIDES.FIXED){weak=a;}
else if(b.collides==ig.Entity.COLLIDES.LITE||a.collides==ig.Entity.COLLIDES.FIXED){weak=b;}
if(a.last.x+a.size.x>b.last.x&&a.last.x<b.last.x+b.size.x){if(a.last.y<b.last.y){ig.Entity.seperateOnYAxis(a,b,weak);}
else{ig.Entity.seperateOnYAxis(b,a,weak);}
a.collideWith(b,'y');b.collideWith(a,'y');}
else if(a.last.y+a.size.y>b.last.y&&a.last.y<b.last.y+b.size.y){if(a.last.x<b.last.x){ig.Entity.seperateOnXAxis(a,b,weak);}
else{ig.Entity.seperateOnXAxis(b,a,weak);}
a.collideWith(b,'x');b.collideWith(a,'x');}};ig.Entity.seperateOnXAxis=function(left,right,weak){var nudge=(left.pos.x+left.size.x-right.pos.x);if(weak){var strong=left===weak?right:left;weak.vel.x=-weak.vel.x*weak.bounciness+strong.vel.x;var resWeak=ig.game.collisionMap.trace(weak.pos.x,weak.pos.y,weak==left?-nudge:nudge,0,weak.size.x,weak.size.y);weak.pos.x=resWeak.pos.x;}
else{var v2=(left.vel.x-right.vel.x)/2;left.vel.x=-v2;right.vel.x=v2;var resLeft=ig.game.collisionMap.trace(left.pos.x,left.pos.y,-nudge/2,0,left.size.x,left.size.y);left.pos.x=Math.floor(resLeft.pos.x);var resRight=ig.game.collisionMap.trace(right.pos.x,right.pos.y,nudge/2,0,right.size.x,right.size.y);right.pos.x=Math.ceil(resRight.pos.x);}};ig.Entity.seperateOnYAxis=function(top,bottom,weak){var nudge=(top.pos.y+top.size.y-bottom.pos.y);if(weak){var strong=top===weak?bottom:top;weak.vel.y=-weak.vel.y*weak.bounciness+strong.vel.y;var nudgeX=0;if(weak==top&&Math.abs(weak.vel.y-strong.vel.y)<weak.minBounceVelocity){weak.standing=true;nudgeX=strong.vel.x*ig.system.tick;}
var resWeak=ig.game.collisionMap.trace(weak.pos.x,weak.pos.y,nudgeX,weak==top?-nudge:nudge,weak.size.x,weak.size.y);weak.pos.y=resWeak.pos.y;weak.pos.x=resWeak.pos.x;}
else if(ig.game.gravity&&(bottom.standing||top.vel.y>0)){var resTop=ig.game.collisionMap.trace(top.pos.x,top.pos.y,0,-(top.pos.y+top.size.y-bottom.pos.y),top.size.x,top.size.y);top.pos.y=resTop.pos.y;if(top.bounciness>0&&top.vel.y>top.minBounceVelocity){top.vel.y*=-top.bounciness;}
else{top.standing=true;top.vel.y=0;}}
else{var v2=(top.vel.y-bottom.vel.y)/2;top.vel.y=-v2;bottom.vel.y=v2;var nudgeX=bottom.vel.x*ig.system.tick;var resTop=ig.game.collisionMap.trace(top.pos.x,top.pos.y,nudgeX,-nudge/2,top.size.x,top.size.y);top.pos.y=resTop.pos.y;var resBottom=ig.game.collisionMap.trace(bottom.pos.x,bottom.pos.y,0,nudge/2,bottom.size.x,bottom.size.y);bottom.pos.y=resBottom.pos.y;}};});

// lib/impact/map.js
ig.baked=true;ig.module('impact.map').defines(function(){"use strict";ig.Map=ig.Class.extend({tilesize:8,width:1,height:1,data:[[]],name:null,init:function(tilesize,data){this.tilesize=tilesize;this.data=data;this.height=data.length;this.width=data[0].length;this.pxWidth=this.width*this.tilesize;this.pxHeight=this.height*this.tilesize;},getTile:function(x,y){var tx=Math.floor(x/this.tilesize);var ty=Math.floor(y/this.tilesize);if((tx>=0&&tx<this.width)&&(ty>=0&&ty<this.height)){return this.data[ty][tx];}
else{return 0;}},setTile:function(x,y,tile){var tx=Math.floor(x/this.tilesize);var ty=Math.floor(y/this.tilesize);if((tx>=0&&tx<this.width)&&(ty>=0&&ty<this.height)){this.data[ty][tx]=tile;}}});});

// lib/impact/collision-map.js
ig.baked=true;ig.module('impact.collision-map').requires('impact.map').defines(function(){"use strict";ig.CollisionMap=ig.Map.extend({lastSlope:1,tiledef:null,init:function(tilesize,data,tiledef){this.parent(tilesize,data);this.tiledef=tiledef||ig.CollisionMap.defaultTileDef;for(var t in this.tiledef){if(t|0>this.lastSlope){this.lastSlope=t|0;}}},trace:function(x,y,vx,vy,objectWidth,objectHeight){var res={collision:{x:false,y:false,slope:false},pos:{x:x,y:y},tile:{x:0,y:0}};var steps=Math.ceil(Math.max(Math.abs(vx),Math.abs(vy))/this.tilesize);if(steps>1){var sx=vx/steps;var sy=vy/steps;for(var i=0;i<steps&&(sx||sy);i++){this._traceStep(res,x,y,sx,sy,objectWidth,objectHeight,vx,vy,i);x=res.pos.x;y=res.pos.y;if(res.collision.x){sx=0;vx=0;}
if(res.collision.y){sy=0;vy=0;}
if(res.collision.slope){break;}}}
else{this._traceStep(res,x,y,vx,vy,objectWidth,objectHeight,vx,vy,0);}
return res;},_traceStep:function(res,x,y,vx,vy,width,height,rvx,rvy,step){res.pos.x+=vx;res.pos.y+=vy;var t=0;if(vx){var pxOffsetX=(vx>0?width:0);var tileOffsetX=(vx<0?this.tilesize:0);var firstTileY=Math.max(Math.floor(y/this.tilesize),0);var lastTileY=Math.min(Math.ceil((y+height)/this.tilesize),this.height);var tileX=Math.floor((res.pos.x+pxOffsetX)/this.tilesize);var prevTileX=Math.floor((x+pxOffsetX)/this.tilesize);if(step>0||tileX==prevTileX||prevTileX<0||prevTileX>=this.width){prevTileX=-1;}
if(tileX>=0&&tileX<this.width){for(var tileY=firstTileY;tileY<lastTileY;tileY++){if(prevTileX!=-1){t=this.data[tileY][prevTileX];if(t>1&&t<=this.lastSlope&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,prevTileX,tileY)){break;}}
t=this.data[tileY][tileX];if(t==1||t>this.lastSlope||(t>1&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,tileY))){if(t>1&&t<=this.lastSlope&&res.collision.slope){break;}
res.collision.x=true;res.tile.x=t;x=res.pos.x=tileX*this.tilesize-pxOffsetX+tileOffsetX;rvx=0;break;}}}}
if(vy){var pxOffsetY=(vy>0?height:0);var tileOffsetY=(vy<0?this.tilesize:0);var firstTileX=Math.max(Math.floor(res.pos.x/this.tilesize),0);var lastTileX=Math.min(Math.ceil((res.pos.x+width)/this.tilesize),this.width);var tileY=Math.floor((res.pos.y+pxOffsetY)/this.tilesize);var prevTileY=Math.floor((y+pxOffsetY)/this.tilesize);if(step>0||tileY==prevTileY||prevTileY<0||prevTileY>=this.height){prevTileY=-1;}
if(tileY>=0&&tileY<this.height){for(var tileX=firstTileX;tileX<lastTileX;tileX++){if(prevTileY!=-1){t=this.data[prevTileY][tileX];if(t>1&&t<=this.lastSlope&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,prevTileY)){break;}}
t=this.data[tileY][tileX];if(t==1||t>this.lastSlope||(t>1&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,tileY))){if(t>1&&t<=this.lastSlope&&res.collision.slope){break;}
res.collision.y=true;res.tile.y=t;res.pos.y=tileY*this.tilesize-pxOffsetY+tileOffsetY;break;}}}}},_checkTileDef:function(res,t,x,y,vx,vy,width,height,tileX,tileY){var def=this.tiledef[t];if(!def){return false;}
var lx=(tileX+def[0])*this.tilesize,ly=(tileY+def[1])*this.tilesize,lvx=(def[2]-def[0])*this.tilesize,lvy=(def[3]-def[1])*this.tilesize,solid=def[4];var tx=x+vx+(lvy<0?width:0)-lx,ty=y+vy+(lvx>0?height:0)-ly;if(lvx*ty-lvy*tx>0){if(vx*-lvy+vy*lvx<0){return solid;}
var length=Math.sqrt(lvx*lvx+lvy*lvy);var nx=lvy/length,ny=-lvx/length;var proj=tx*nx+ty*ny;var px=nx*proj,py=ny*proj;if(px*px+py*py>=vx*vx+vy*vy){return solid||(lvx*(ty-vy)-lvy*(tx-vx)<0.5);}
res.pos.x=x+vx-px;res.pos.y=y+vy-py;res.collision.slope={x:lvx,y:lvy,nx:nx,ny:ny};return true;}
return false;}});var H=1/2,N=1/3,M=2/3,SOLID=true,NON_SOLID=false;ig.CollisionMap.defaultTileDef={5:[0,1,1,M,SOLID],6:[0,M,1,N,SOLID],7:[0,N,1,0,SOLID],3:[0,1,1,H,SOLID],4:[0,H,1,0,SOLID],2:[0,1,1,0,SOLID],10:[H,1,1,0,SOLID],21:[0,1,H,0,SOLID],32:[M,1,1,0,SOLID],43:[N,1,M,0,SOLID],54:[0,1,N,0,SOLID],27:[0,0,1,N,SOLID],28:[0,N,1,M,SOLID],29:[0,M,1,1,SOLID],25:[0,0,1,H,SOLID],26:[0,H,1,1,SOLID],24:[0,0,1,1,SOLID],11:[0,0,H,1,SOLID],22:[H,0,1,1,SOLID],33:[0,0,N,1,SOLID],44:[N,0,M,1,SOLID],55:[M,0,1,1,SOLID],16:[1,N,0,0,SOLID],17:[1,M,0,N,SOLID],18:[1,1,0,M,SOLID],14:[1,H,0,0,SOLID],15:[1,1,0,H,SOLID],13:[1,1,0,0,SOLID],8:[H,1,0,0,SOLID],19:[1,1,H,0,SOLID],30:[N,1,0,0,SOLID],41:[M,1,N,0,SOLID],52:[1,1,M,0,SOLID],38:[1,M,0,1,SOLID],39:[1,N,0,M,SOLID],40:[1,0,0,N,SOLID],36:[1,H,0,1,SOLID],37:[1,0,0,H,SOLID],35:[1,0,0,1,SOLID],9:[1,0,H,1,SOLID],20:[H,0,0,1,SOLID],31:[1,0,M,1,SOLID],42:[M,0,N,1,SOLID],53:[N,0,0,1,SOLID],12:[0,0,1,0,NON_SOLID],23:[1,1,0,1,NON_SOLID],34:[1,0,1,1,NON_SOLID],45:[0,1,0,0,NON_SOLID]};ig.CollisionMap.staticNoCollision={trace:function(x,y,vx,vy){return{collision:{x:false,y:false,slope:false},pos:{x:x+vx,y:y+vy},tile:{x:0,y:0}};}};});

// lib/impact/background-map.js
ig.baked=true;ig.module('impact.background-map').requires('impact.map','impact.image').defines(function(){"use strict";ig.BackgroundMap=ig.Map.extend({tiles:null,scroll:{x:0,y:0},distance:1,repeat:false,tilesetName:'',foreground:false,enabled:true,preRender:false,preRenderedChunks:null,chunkSize:512,debugChunks:false,anims:{},init:function(tilesize,data,tileset){this.parent(tilesize,data);this.setTileset(tileset);},setTileset:function(tileset){this.tilesetName=tileset instanceof ig.Image?tileset.path:tileset;this.tiles=new ig.Image(this.tilesetName);this.preRenderedChunks=null;},setScreenPos:function(x,y){this.scroll.x=x/this.distance;this.scroll.y=y/this.distance;},preRenderMapToChunks:function(){var totalWidth=this.width*this.tilesize*ig.system.scale,totalHeight=this.height*this.tilesize*ig.system.scale;this.chunkSize=Math.min(Math.max(totalWidth,totalHeight),this.chunkSize);var chunkCols=Math.ceil(totalWidth/this.chunkSize),chunkRows=Math.ceil(totalHeight/this.chunkSize);this.preRenderedChunks=[];for(var y=0;y<chunkRows;y++){this.preRenderedChunks[y]=[];for(var x=0;x<chunkCols;x++){var chunkWidth=(x==chunkCols-1)?totalWidth-x*this.chunkSize:this.chunkSize;var chunkHeight=(y==chunkRows-1)?totalHeight-y*this.chunkSize:this.chunkSize;this.preRenderedChunks[y][x]=this.preRenderChunk(x,y,chunkWidth,chunkHeight);}}},preRenderChunk:function(cx,cy,w,h){var tw=w/this.tilesize/ig.system.scale+1,th=h/this.tilesize/ig.system.scale+1;var nx=(cx*this.chunkSize/ig.system.scale)%this.tilesize,ny=(cy*this.chunkSize/ig.system.scale)%this.tilesize;var tx=Math.floor(cx*this.chunkSize/this.tilesize/ig.system.scale),ty=Math.floor(cy*this.chunkSize/this.tilesize/ig.system.scale);var chunk=ig.$new('canvas');chunk.width=w;chunk.height=h;chunk.retinaResolutionEnabled=false;var chunkContext=chunk.getContext('2d');ig.System.scaleMode(chunk,chunkContext);var screenContext=ig.system.context;ig.system.context=chunkContext;for(var x=0;x<tw;x++){for(var y=0;y<th;y++){if(x+tx<this.width&&y+ty<this.height){var tile=this.data[y+ty][x+tx];if(tile){this.tiles.drawTile(x*this.tilesize-nx,y*this.tilesize-ny,tile-1,this.tilesize);}}}}
ig.system.context=screenContext;return chunk;},draw:function(){if(!this.tiles.loaded||!this.enabled){return;}
if(this.preRender){this.drawPreRendered();}
else{this.drawTiled();}},drawPreRendered:function(){if(!this.preRenderedChunks){this.preRenderMapToChunks();}
var dx=ig.system.getDrawPos(this.scroll.x),dy=ig.system.getDrawPos(this.scroll.y);if(this.repeat){var w=this.width*this.tilesize*ig.system.scale;dx=(dx%w+w)%w;var h=this.height*this.tilesize*ig.system.scale;dy=(dy%h+h)%h;}
var minChunkX=Math.max(Math.floor(dx/this.chunkSize),0),minChunkY=Math.max(Math.floor(dy/this.chunkSize),0),maxChunkX=Math.ceil((dx+ig.system.realWidth)/this.chunkSize),maxChunkY=Math.ceil((dy+ig.system.realHeight)/this.chunkSize),maxRealChunkX=this.preRenderedChunks[0].length,maxRealChunkY=this.preRenderedChunks.length;if(!this.repeat){maxChunkX=Math.min(maxChunkX,maxRealChunkX);maxChunkY=Math.min(maxChunkY,maxRealChunkY);}
var nudgeY=0;for(var cy=minChunkY;cy<maxChunkY;cy++){var nudgeX=0;for(var cx=minChunkX;cx<maxChunkX;cx++){var chunk=this.preRenderedChunks[cy%maxRealChunkY][cx%maxRealChunkX];var x=-dx+cx*this.chunkSize-nudgeX;var y=-dy+cy*this.chunkSize-nudgeY;ig.system.context.drawImage(chunk,x,y);ig.Image.drawCount++;if(this.debugChunks){ig.system.context.strokeStyle='#f0f';ig.system.context.strokeRect(x,y,this.chunkSize,this.chunkSize);}
if(this.repeat&&chunk.width<this.chunkSize&&x+chunk.width<ig.system.realWidth){nudgeX+=this.chunkSize-chunk.width;maxChunkX++;}}
if(this.repeat&&chunk.height<this.chunkSize&&y+chunk.height<ig.system.realHeight){nudgeY+=this.chunkSize-chunk.height;maxChunkY++;}}},drawTiled:function(){var tile=0,anim=null,tileOffsetX=(this.scroll.x/this.tilesize).toInt(),tileOffsetY=(this.scroll.y/this.tilesize).toInt(),pxOffsetX=this.scroll.x%this.tilesize,pxOffsetY=this.scroll.y%this.tilesize,pxMinX=-pxOffsetX-this.tilesize,pxMinY=-pxOffsetY-this.tilesize,pxMaxX=ig.system.width+this.tilesize-pxOffsetX,pxMaxY=ig.system.height+this.tilesize-pxOffsetY;for(var mapY=-1,pxY=pxMinY;pxY<pxMaxY;mapY++,pxY+=this.tilesize){var tileY=mapY+tileOffsetY;if(tileY>=this.height||tileY<0){if(!this.repeat){continue;}
tileY=(tileY%this.height+this.height)%this.height;}
for(var mapX=-1,pxX=pxMinX;pxX<pxMaxX;mapX++,pxX+=this.tilesize){var tileX=mapX+tileOffsetX;if(tileX>=this.width||tileX<0){if(!this.repeat){continue;}
tileX=(tileX%this.width+this.width)%this.width;}
if((tile=this.data[tileY][tileX])){if((anim=this.anims[tile-1])){anim.draw(pxX,pxY);}
else{this.tiles.drawTile(pxX,pxY,tile-1,this.tilesize);}}}}}});});

// lib/impact/game.js
ig.baked=true;ig.module('impact.game').requires('impact.impact','impact.entity','impact.collision-map','impact.background-map').defines(function(){"use strict";ig.Game=ig.Class.extend({clearColor:'#000000',gravity:0,screen:{x:0,y:0},_rscreen:{x:0,y:0},entities:[],namedEntities:{},collisionMap:ig.CollisionMap.staticNoCollision,backgroundMaps:[],backgroundAnims:{},autoSort:false,sortBy:null,cellSize:64,_deferredKill:[],_levelToLoad:null,_doSortEntities:false,staticInstantiate:function(){this.sortBy=this.sortBy||ig.Game.SORT.Z_INDEX;ig.game=this;return null;},loadLevel:function(data){this.screen={x:0,y:0};this.entities=[];this.namedEntities={};for(var i=0;i<data.entities.length;i++){var ent=data.entities[i];this.spawnEntity(ent.type,ent.x,ent.y,ent.settings);}
this.sortEntities();this.collisionMap=ig.CollisionMap.staticNoCollision;this.backgroundMaps=[];for(var i=0;i<data.layer.length;i++){var ld=data.layer[i];if(ld.name=='collision'){this.collisionMap=new ig.CollisionMap(ld.tilesize,ld.data);}
else{var newMap=new ig.BackgroundMap(ld.tilesize,ld.data,ld.tilesetName);newMap.anims=this.backgroundAnims[ld.tilesetName]||{};newMap.repeat=ld.repeat;newMap.distance=ld.distance;newMap.foreground=!!ld.foreground;newMap.preRender=!!ld.preRender;newMap.name=ld.name;this.backgroundMaps.push(newMap);}}
for(var i=0;i<this.entities.length;i++){this.entities[i].ready();}},loadLevelDeferred:function(data){this._levelToLoad=data;},getMapByName:function(name){if(name=='collision'){return this.collisionMap;}
for(var i=0;i<this.backgroundMaps.length;i++){if(this.backgroundMaps[i].name==name){return this.backgroundMaps[i];}}
return null;},getEntityByName:function(name){return this.namedEntities[name];},getEntitiesByType:function(type){var entityClass=typeof(type)==='string'?ig.global[type]:type;var a=[];for(var i=0;i<this.entities.length;i++){var ent=this.entities[i];if(ent instanceof entityClass&&!ent._killed){a.push(ent);}}
return a;},spawnEntity:function(type,x,y,settings){var entityClass=typeof(type)==='string'?ig.global[type]:type;if(!entityClass){throw("Can't spawn entity of type "+type);}
var ent=new(entityClass)(x,y,settings||{});this.entities.push(ent);if(ent.name){this.namedEntities[ent.name]=ent;}
return ent;},sortEntities:function(){this.entities.sort(this.sortBy);},sortEntitiesDeferred:function(){this._doSortEntities=true;},removeEntity:function(ent){if(ent.name){delete this.namedEntities[ent.name];}
ent._killed=true;ent.type=ig.Entity.TYPE.NONE;ent.checkAgainst=ig.Entity.TYPE.NONE;ent.collides=ig.Entity.COLLIDES.NEVER;this._deferredKill.push(ent);},run:function(){this.update();this.draw();},update:function(){if(this._levelToLoad){this.loadLevel(this._levelToLoad);this._levelToLoad=null;}
this.updateEntities();this.checkEntities();for(var i=0;i<this._deferredKill.length;i++){this._deferredKill[i].erase();this.entities.erase(this._deferredKill[i]);}
this._deferredKill=[];if(this._doSortEntities||this.autoSort){this.sortEntities();this._doSortEntities=false;}
for(var tileset in this.backgroundAnims){var anims=this.backgroundAnims[tileset];for(var a in anims){anims[a].update();}}},updateEntities:function(){for(var i=0;i<this.entities.length;i++){var ent=this.entities[i];if(!ent._killed){ent.update();}}},draw:function(){if(this.clearColor){ig.system.clear(this.clearColor);}
this._rscreen.x=ig.system.getDrawPos(this.screen.x)/ig.system.scale;this._rscreen.y=ig.system.getDrawPos(this.screen.y)/ig.system.scale;var mapIndex;for(mapIndex=0;mapIndex<this.backgroundMaps.length;mapIndex++){var map=this.backgroundMaps[mapIndex];if(map.foreground){break;}
map.setScreenPos(this.screen.x,this.screen.y);map.draw();}
this.drawEntities();for(mapIndex;mapIndex<this.backgroundMaps.length;mapIndex++){var map=this.backgroundMaps[mapIndex];map.setScreenPos(this.screen.x,this.screen.y);map.draw();}},drawEntities:function(){for(var i=0;i<this.entities.length;i++){this.entities[i].draw();}},checkEntities:function(){var hash={};for(var e=0;e<this.entities.length;e++){var entity=this.entities[e];if(entity.type==ig.Entity.TYPE.NONE&&entity.checkAgainst==ig.Entity.TYPE.NONE&&entity.collides==ig.Entity.COLLIDES.NEVER){continue;}
var checked={},xmin=Math.floor(entity.pos.x/this.cellSize),ymin=Math.floor(entity.pos.y/this.cellSize),xmax=Math.floor((entity.pos.x+entity.size.x)/this.cellSize)+1,ymax=Math.floor((entity.pos.y+entity.size.y)/this.cellSize)+1;for(var x=xmin;x<xmax;x++){for(var y=ymin;y<ymax;y++){if(!hash[x]){hash[x]={};hash[x][y]=[entity];}
else if(!hash[x][y]){hash[x][y]=[entity];}
else{var cell=hash[x][y];for(var c=0;c<cell.length;c++){if(entity.touches(cell[c])&&!checked[cell[c].id]){checked[cell[c].id]=true;ig.Entity.checkPair(entity,cell[c]);}}
cell.push(entity);}}}}}});ig.Game.SORT={Z_INDEX:function(a,b){return a.zIndex-b.zIndex;},POS_X:function(a,b){return(a.pos.x+a.size.x)-(b.pos.x+b.size.x);},POS_Y:function(a,b){return(a.pos.y+a.size.y)-(b.pos.y+b.size.y);}};});

// lib/plugins/gamepad.js
ig.baked=true;ig.module('plugins.gamepad').requires('impact.input','impact.game').defines(function(){ig.GAMEPAD_BUTTON_OFFSET=256;ig.GAMEPAD={FACE_1:ig.GAMEPAD_BUTTON_OFFSET+0,FACE_2:ig.GAMEPAD_BUTTON_OFFSET+1,FACE_3:ig.GAMEPAD_BUTTON_OFFSET+2,FACE_4:ig.GAMEPAD_BUTTON_OFFSET+3,LEFT_SHOULDER:ig.GAMEPAD_BUTTON_OFFSET+4,RIGHT_SHOULDER:ig.GAMEPAD_BUTTON_OFFSET+5,LEFT_SHOULDER_BOTTOM:ig.GAMEPAD_BUTTON_OFFSET+6,RIGHT_SHOULDER_BOTTOM:ig.GAMEPAD_BUTTON_OFFSET+7,SELECT:ig.GAMEPAD_BUTTON_OFFSET+8,START:ig.GAMEPAD_BUTTON_OFFSET+9,LEFT_ANALOGUE_STICK:ig.GAMEPAD_BUTTON_OFFSET+10,RIGHT_ANALOGUE_STICK:ig.GAMEPAD_BUTTON_OFFSET+11,PAD_TOP:ig.GAMEPAD_BUTTON_OFFSET+12,PAD_BOTTOM:ig.GAMEPAD_BUTTON_OFFSET+13,PAD_LEFT:ig.GAMEPAD_BUTTON_OFFSET+14,PAD_RIGHT:ig.GAMEPAD_BUTTON_OFFSET+15,OUYA:ig.GAMEPAD_BUTTON_OFFSET+16,A_LEFT:ig.GAMEPAD_BUTTON_OFFSET+17,A_RIGHT:ig.GAMEPAD_BUTTON_OFFSET+18,A_UP:ig.GAMEPAD_BUTTON_OFFSET+19,A_DOWN:ig.GAMEPAD_BUTTON_OFFSET+20};ig.normalizeVendorAttribute(navigator,'getGamepads');if(!navigator.getGamepads){return;}
ig.Input.inject({gamepad:null,lastButtons:[],treshold:0.7,hasButtonObject:!!window.GamepadButton,getFirstGamepadSnapshot:function(){var gamepads=navigator.getGamepads();for(var i=0;i<gamepads.length;i++){if(gamepads[i]){return gamepads[i];}}
return null;},pollGamepad:function(){this.gamepad=this.getFirstGamepadSnapshot();if(!this.gamepad){return;}
for(var button=0;button<this.gamepad.buttons.length;button++){var action=this.bindings[button+ig.GAMEPAD_BUTTON_OFFSET];if(action){currentState=this.hasButtonObject?this.gamepad.buttons[button].pressed:this.gamepad.buttons[button];var prevState=this.lastButtons[button];if(!prevState&&currentState){this.actions[action]=true;this.presses[action]=true;}
else if(prevState&&!currentState){this.delayedKeyup[action]=true;}}
this.lastButtons[button]=currentState;}
var bind=this.bindings[ig.GAMEPAD_BUTTON_OFFSET+17];if(this.gamepad.axes[0]<-this.treshold){this.actions[bind]=true;this.presses[bind]=true;}else{this.delayedKeyup[bind]=true;}
bind=this.bindings[ig.GAMEPAD_BUTTON_OFFSET+18];if(this.gamepad.axes[0]>this.treshold){this.actions[bind]=true;this.presses[bind]=true;}else{this.delayedKeyup[bind]=true;}
bind=this.bindings[ig.GAMEPAD_BUTTON_OFFSET+19];if(this.gamepad.axes[1]<-this.treshold){this.actions[bind]=true;this.presses[bind]=true;}else{this.delayedKeyup[bind]=true;}
bind=this.bindings[ig.GAMEPAD_BUTTON_OFFSET+20];if(this.gamepad.axes[1]>this.treshold){this.actions[bind]=true;this.presses[bind]=true;}else{this.delayedKeyup[bind]=true;}}});ig.Game.inject({run:function(){ig.input.pollGamepad();this.parent();}})});

// lib/plugins/procedural-map.js
ig.baked=true;ig.module('plugins.procedural-map').requires('impact.game').defines(function(){ig.ProceduralMap=ig.Class.extend({terrain:[],units:[],blueprint:{width:20,height:8,season:null,dna:{trees:0,rocks:0,bases:0,}},init:function(){},generate:function(params){this.blueprint.width=params.prefs.width;this.blueprint.height=params.prefs.height;this.blueprint.season=params.prefs.season;this.blueprint.dna.trees=params.dna.trees;this.blueprint.dna.rocks=params.dna.rocks;this.blueprint.dna.bases=params.dna.bases;for(var x=0;x<this.blueprint.width;x++){this.terrain[x]=[this.blueprint.height];this.units[x]=[this.blueprint.height];}
for(var x=0;x<this.blueprint.width;x++){for(var y=0;y<this.blueprint.height;y++){this.terrain[x][y]={};this.terrain[x][y].type=0;this.units[x][y]=false;}}
var random=0,newTile=false,empty=[];for(var x=0;x<this.blueprint.width;x++){for(var y=0;y<this.blueprint.height;y++){newTile=false;if(x==0){newTile=3;}else
if(x==this.blueprint.width-1){newTile=4;}else{if(this.blueprint.dna.trees>Math.random()){newTile=1;}else
if(this.blueprint.dna.rocks>Math.random()){newTile=2;}}
if(x>2&&x<this.blueprint.width-3){if(!newTile)empty.push({x:x,y:y})}
if(newTile)this.terrain[x][y].type=newTile;}}
var freeInRow=0,randomRow=0;for(var x=1;x<this.blueprint.width-1;x++){for(var y=0;y<this.blueprint.height;y++){freeInRow=0;if(this.terrain[x][y]&&this.terrain[x][y].type===0){freeInRow+=1;}}
if(freeInRow===0){randomRow=(Math.random()*this.blueprint.height)<<0;this.terrain[x][randomRow].type=0;}}
if(this.blueprint.dna.bases>empty.length)this.blueprint.dna.bases=empty.length;for(var i=0;i<this.blueprint.dna.bases;i++){var r=(Math.random()*empty.length)<<0;this.terrain[empty[r].x][empty[r].y].type=5;this.terrain[empty[r].x][empty[r].y].base=true;};return true;},get:function(){return{terrain:this.terrain,units:this.units,blueprint:this.blueprint};}});});

// lib/plugins/ai.js
ig.baked=true;ig.module('plugins.ai').requires('impact.game').defines(function(){ig.AI=ig.Class.extend({team:1,toDo:{buy:[],move:[]},timer:new ig.Timer(),turnTime:1,status:{init:false,thinking:false,buying:false,moveing:false},stats:{ownUnits:{soldier:0,tank:0,helicopter:0,all:0},enemyUnits:{soldier:0,tank:0,helicopter:0,all:0},ownBases:0,enemyBases:0},log:true,init:function(){if(this.log)console.log('AI initialized. Now will conquer the world!');},analizeTerrain:function(params){var unit,enemy,dir,newX,up,down;this.stats.ownUnits.soldier=0;this.stats.ownUnits.tank=0;this.stats.ownUnits.helicopter=0;this.stats.ownUnits.all=0;this.stats.enemyUnits.soldier=0;this.stats.enemyUnits.tank=0;this.stats.enemyUnits.helicopter=0;this.stats.enemyUnits.all=0;dir=(ig.game.team===1?1:-1);if(params&&params.calculateMoves){if(this.log)console.log('-[ '+ig.game.turn+']- ------- AI calculate moves ------');}
for(var x=0;x<ig.game.map.blueprint.width;x++){for(var y=0;y<ig.game.map.blueprint.height;y++){unit=ig.game.getEntityByName(ig.game.map.units[x][y]);if(unit&&unit.team===ig.game.team){if(unit.base){this.stats.ownBases+=1;}else
if(!unit.flag){if(unit.soldier)this.stats.ownUnits.soldier+=1;if(unit.tank)this.stats.ownUnits.tank+=1;if(unit.helicopter)this.stats.ownUnits.helicopter+=1;this.stats.ownUnits.all+=1
if(params&&params.calculateMoves){if(this.log)console.log(x,y,'search terrain',ig.game.map.terrain[x+dir][y].type,unit.terrain)
if(ig.game.map.terrain[x+dir][y].type>=unit.terrain&&ig.game.map.terrain[x+dir][y].type<3){if(this.log)console.log(x,y,'move terrain')
if(((Math.random()*10)<<0)<=5){up=false;down=true;}else{up=true;down=false;}
newX=((x==0||x==ig.game.map.blueprint.width-1)?x+dir:x);this.toDo.move.push({row:newX,quanity:1,up:up,down:down});this.status.moveing=true;}else{if(this.log)console.log(x,y,'search for units')
enemy=ig.game.getEntityByName(ig.game.map.units[x+dir][y]);if(enemy&&enemy.team!==unit.team){if(this.log)console.log(x,y,'found enemy')
if(enemy.power>unit.power||enemy.flag){if(this.log)console.log(x,y,'enemy power: '+enemy.power,'my power: '+unit.power,'retreat')
if(((Math.random()*10)<<0)<=5){up=false;down=true;}else{up=true;down=false;}
this.toDo.move.push({row:x,quanity:1,top:top,down:down});this.status.moveing=true;}else
if(unit.power>1&&enemy.power<=unit.power){if(this.log)console.log(x,y,'enemy power: '+enemy.power,'my power: '+unit.power,'attack')}else{if(this.log)console.log(x,y,'earch for cross tiles')
if(y>0){enemy=ig.game.getEntityByName(ig.game.map.units[x+dir][y-1]);}else{enemy=ig.game.getEntityByName(ig.game.map.units[x+dir][ig.game.map.blueprint.height-1]);}
if(enemy){up=false;down=true;}else{enemy=false;if(y<ig.game.map.blueprint.height-1){enemy=ig.game.getEntityByName(ig.game.map.units[x+dir][y+1]);}else{enemy=ig.game.getEntityByName(ig.game.map.units[x+dir][0]);}
if(enemy){up=true;down=false;}}
if(enemy){if(enemy.base){this.toDo.move.push({row:x,up:up,down:down,quanity:1});this.status.moveing=true;}
if(enemy.power<unit.power||(unit.power>1&&enemy.power<=unit.power)){this.toDo.move.push({row:x,up:up,down:down,quanity:1});this.status.moveing=true;}}}}else{if(((Math.random()*10)<<0)<=5){up=false;down=true;}else{up=true;down=false;}
this.toDo.move.push({row:x,quanity:1,top:top,down:down});this.status.moveing=true;}}}}}
if(unit&&unit.team!==ig.game.team){if(ig.game.map.units[x][y].base){this.stats.enemyBases+=1;}else
if(!unit.flag){if(unit.soldier)this.stats.enemyUnits.soldier+=1;if(unit.tank)this.stats.enemyUnits.tank+=1;if(unit.helicopter)this.stats.enemyUnits.helicopter+=1;this.stats.enemyUnits.all+=1}}}};},makeToDo:function(){this.analizeTerrain();var r=(Math.random()*10)<<0;if(ig.game.turn<2&&this.stats.enemyUnits.helicopter===0){this.toDo.buy.push({unit:'soldier',quanity:3});this.toDo.buy.push({unit:'tank',quanity:1});}else
if(ig.game.turn<3&&this.stats.enemyUnits.helicopter>0){this.toDo.buy.push({unit:'helicopter',quanity:1});this.toDo.buy.push({unit:'soldier',quanity:3});}else
if(this.stats.enemyUnits.all>=this.stats.ownUnits.all||r<3){if((this.stats.enemyUnits.helicopter>this.stats.ownUnits.helicopter&&ig.game.teams[ig.game.team-1].bitcoins>=6&&ig.game.turn>5)||r==1){this.toDo.buy.push({unit:'helicopter',quanity:1});}
if(this.stats.enemyUnits.tank>this.stats.ownUnits.tank&&ig.game.turn>1&&r<7&&ig.game.teams[ig.game.team-1].bitcoins>2){this.toDo.buy.push({unit:'tank',quanity:1});}
if((this.stats.enemyUnits.soldier>this.stats.ownUnits.soldier&&r<6&&this.stats.ownUnits.soldier<8)||this.stats.ownUnits.soldier<3){this.toDo.buy.push({unit:'soldier',quanity:1});}}
this.status.buying=true;this.analizeTerrain({calculateMoves:true});},runToDo:function(){if(this.status.buying&&this.timer.delta()>-0.8){for(var i=0;i<this.toDo.buy.length;i++){for(var q=0;q<this.toDo.buy[i].quanity;q++){ig.game.buyUnit({unit:this.toDo.buy[i].unit,team:ig.game.team});};};this.status.buying=false;}
if(this.status.moveing&&this.timer.delta()>-0.5){if(this.toDo.move.length>0){for(var y=0;y<this.toDo.move[0].quanity;y++){ig.game.moveRuler({setRow:this.toDo.move[0].row,up:this.toDo.move[0].up,down:this.toDo.move[0].down});};}}
if(this.status.moveing&&this.timer.delta()>-0.3){if(this.toDo.move.length>1){for(var i=1;i<this.toDo.move.length;i++){ig.game.moveRuler({setRow:this.toDo.move[i].row,up:this.toDo.move[i].up,down:this.toDo.move[i].down});};}
this.status.moveing=false;}
if(this.timer.delta()>-0.2){this.status.thinking=false;}},unlock:function(){this.status.thinking=true;this.status.init=false;},think:function(params){if(!this.status.init){this.timer.set(this.turnTime);this.toDo.buy=[];this.toDo.move=[];this.status.init=true;this.makeToDo();}
if(this.status.thinking){this.runToDo();}}});});

// lib/game/entities/terrain.js
ig.baked=true;ig.module('game.entities.terrain').requires('impact.entity').defines(function(){EntityTerrain=ig.Entity.extend({type:ig.Entity.TYPE.B,checkAgainst:ig.Entity.TYPE.NONE,init:function(x,y,settings){this.parent(x,y,settings);},});});

// lib/game/entities/grass.js
ig.baked=true;ig.module('game.entities.grass').requires('game.entities.terrain').defines(function(){EntityGrass=EntityTerrain.extend({animSheet:new ig.AnimationSheet('media/map/summer.png',16,16),size:{x:16,y:16},init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',1,[0]);},update:function(){this.parent();},});});

// lib/game/entities/tree.js
ig.baked=true;ig.module('game.entities.tree').requires('game.entities.terrain').defines(function(){EntityTree=EntityTerrain.extend({animSheet:new ig.AnimationSheet('media/map/summer.png',16,16),size:{x:16,y:16},init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',1,[1]);},update:function(){this.parent();},});});

// lib/game/entities/rock.js
ig.baked=true;ig.module('game.entities.rock').requires('game.entities.terrain').defines(function(){EntityRock=EntityTerrain.extend({animSheet:new ig.AnimationSheet('media/map/summer.png',16,16),size:{x:16,y:16},init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',1,[2]);},update:function(){this.parent();},});});

// lib/game/entities/grass_left.js
ig.baked=true;ig.module('game.entities.grass_left').requires('game.entities.terrain').defines(function(){EntityGrass_left=EntityTerrain.extend({animSheet:new ig.AnimationSheet('media/map/summer.png',16,16),size:{x:16,y:16},init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',1,[3]);},update:function(){this.parent();},});});

// lib/game/entities/grass_right.js
ig.baked=true;ig.module('game.entities.grass_right').requires('game.entities.terrain').defines(function(){EntityGrass_right=EntityTerrain.extend({animSheet:new ig.AnimationSheet('media/map/summer.png',16,16),size:{x:16,y:16},init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',1,[4]);},update:function(){this.parent();},});});

// lib/game/entities/base.js
ig.baked=true;ig.module('game.entities.base').requires('game.entities.terrain').defines(function(){EntityBase=EntityTerrain.extend({animSheet:new ig.AnimationSheet('media/map/summer.png',16,16),size:{x:16,y:16},base:true,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',1,[6]);this.addAnim('blue',1,[7]);this.addAnim('red',1,[8]);this.name=settings.name;this.team=false;},capture:function(team){if(team===1){this.currentAnim=this.anims.blue;}else{this.currentAnim=this.anims.red;}
this.team=team;},update:function(){this.parent();},});});

// lib/impact/entity-pool.js
ig.baked=true;ig.module('impact.entity-pool').requires('impact.game').defines(function(){"use strict";ig.EntityPool={pools:{},mixin:{staticInstantiate:function(x,y,settings){return ig.EntityPool.getFromPool(this.classId,x,y,settings);},erase:function(){ig.EntityPool.putInPool(this);}},enableFor:function(Class){Class.inject(this.mixin);},getFromPool:function(classId,x,y,settings){var pool=this.pools[classId];if(!pool||!pool.length){return null;}
var instance=pool.pop();instance.reset(x,y,settings);return instance;},putInPool:function(instance){if(!this.pools[instance.classId]){this.pools[instance.classId]=[instance];}
else{this.pools[instance.classId].push(instance);}},drainPool:function(classId){delete this.pools[classId];},drainAllPools:function(){this.pools={};}};ig.Game.inject({loadLevel:function(data){ig.EntityPool.drainAllPools();this.parent(data);}});});

// lib/game/entities/unit.js
ig.baked=true;ig.module('game.entities.unit').requires('impact.entity','impact.entity-pool').defines(function(){EntityUnit=ig.Entity.extend({type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.NONE,animSheet:new ig.AnimationSheet('media/units/units.png',16,16),size:{x:16,y:16},speed:100,init:function(x,y,settings){this.parent(x,y,settings);this.name=settings.name;this.turn=settings.turn;},reset:function(x,y,settings){this.parent(x,y,settings);this.name=settings.name;this.turn=settings.turn;},});ig.EntityPool.enableFor(EntityUnit);});

// lib/game/entities/soldier_blue.js
ig.baked=true;ig.module('game.entities.soldier_blue').requires('game.entities.unit').defines(function(){EntitySoldier_blue=EntityUnit.extend({team:1,target:false,soldier:true,speed:35,terrain:2,power:1,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',0.3,[0,1,2]);this.currentAnim.gotoRandomFrame();},reset:function(x,y,settings){this.parent(x,y,settings);this.currentAnim.gotoRandomFrame();},update:function(){this.parent();},});});

// lib/game/entities/soldier_red.js
ig.baked=true;ig.module('game.entities.soldier_red').requires('game.entities.unit').defines(function(){EntitySoldier_red=EntityUnit.extend({team:2,target:false,soldier:true,speed:35,terrain:2,power:1,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',0.3,[3,4,5]);this.currentAnim.gotoRandomFrame();},reset:function(x,y,settings){this.parent(x,y,settings);this.currentAnim.gotoRandomFrame();},update:function(){this.parent();},});});

// lib/game/entities/tank_blue.js
ig.baked=true;ig.module('game.entities.tank_blue').requires('game.entities.unit').defines(function(){EntityTank_blue=EntityUnit.extend({team:1,target:false,tank:true,speed:20,terrain:1,power:2,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',0.3,[6,7,8]);this.currentAnim.gotoRandomFrame();},reset:function(x,y,settings){this.parent(x,y,settings);this.currentAnim.gotoRandomFrame();},update:function(){this.parent();},});});

// lib/game/entities/tank_red.js
ig.baked=true;ig.module('game.entities.tank_red').requires('game.entities.unit').defines(function(){EntityTank_red=EntityUnit.extend({team:2,target:false,tank:true,speed:20,terrain:1,power:2,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',0.3,[9,10,11]);this.currentAnim.gotoRandomFrame();},reset:function(x,y,settings){this.parent(x,y,settings);this.currentAnim.gotoRandomFrame();},update:function(){this.parent();},});});

// lib/game/entities/helicopter_blue.js
ig.baked=true;ig.module('game.entities.helicopter_blue').requires('game.entities.unit').defines(function(){EntityHelicopter_blue=EntityUnit.extend({team:1,target:false,helicopter:true,speed:60,terrain:3,power:3,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',0.3,[12,13,12,14,15,14]);this.currentAnim.gotoRandomFrame();},reset:function(x,y,settings){this.parent(x,y,settings);this.currentAnim.gotoRandomFrame();},update:function(){this.parent();},});});

// lib/game/entities/helicopter_red.js
ig.baked=true;ig.module('game.entities.helicopter_red').requires('game.entities.unit').defines(function(){EntityHelicopter_red=EntityUnit.extend({team:2,target:false,helicopter:true,speed:60,terrain:3,power:3,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',0.3,[16,17,16,18,19,18]);this.currentAnim.gotoRandomFrame();},reset:function(x,y,settings){this.parent(x,y,settings);this.currentAnim.gotoRandomFrame();},update:function(){this.parent();},});});

// lib/game/entities/flag.js
ig.baked=true;ig.module('game.entities.flag').requires('impact.entity').defines(function(){EntityFlag=ig.Entity.extend({type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.NONE,init:function(x,y,settings){this.parent(x,y,settings);},reset:function(x,y,settings){this.parent(x,y,settings);},});});

// lib/game/entities/flag_red.js
ig.baked=true;ig.module('game.entities.flag_red').requires('game.entities.flag').defines(function(){EntityFlag_red=EntityFlag.extend({blue:true,flag:true,animSheet:new ig.AnimationSheet('media/map/flags.png',16,16),size:{x:16,y:16},init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',0.1,[0,1,2,3]);this.currentAnim.gotoRandomFrame();},update:function(){this.parent();},});});

// lib/game/entities/flag_blue.js
ig.baked=true;ig.module('game.entities.flag_blue').requires('game.entities.flag').defines(function(){EntityFlag_blue=EntityFlag.extend({red:true,flag:true,animSheet:new ig.AnimationSheet('media/map/flags.png',16,16),size:{x:16,y:16},init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',0.1,[4,5,6,7]);this.currentAnim.gotoRandomFrame();},update:function(){this.parent();},});});

// lib/game/main.js
ig.baked=true;ig.module('game.main').requires('impact.game','impact.font','plugins.gamepad','plugins.procedural-map','plugins.ai','game.entities.terrain','game.entities.grass','game.entities.tree','game.entities.rock','game.entities.grass_left','game.entities.grass_right','game.entities.base','game.entities.unit','game.entities.soldier_blue','game.entities.soldier_red','game.entities.tank_blue','game.entities.tank_red','game.entities.helicopter_blue','game.entities.helicopter_red','game.entities.flag','game.entities.flag_red','game.entities.flag_blue').defines(function(){MyGame=ig.Game.extend({version:'beta 2 \'fifteen rats\'',clearColor:'#b2dcef',fontWhite:new ig.Font('media/font/white.png'),fontColor:new ig.Font('media/font/colors.png'),fontRed:new ig.Font('media/font/red.png'),fontBlue:new ig.Font('media/font/blue.png'),logoImage:new ig.Image('media/gui/logo.png'),heroesImage:new ig.Image('media/gui/heroes.png'),mapFrameSheet:new ig.Image('media/gui/frame.png'),cornerSheet:new ig.Image('media/gui/corner.png'),buyButtonsSheet:new ig.Image('media/gui/buy_buttons.png'),unitsSheet:new ig.Image('media/units/units.png'),rulerSheet:new ig.Image('media/gui/ruler.png'),spreadArmy:new ig.Image('media/gui/spread_army.png'),spreadTerrain:new ig.Image('media/gui/spread_terrain.png'),sMenu:new ig.Sound('media/sounds/menu.*',false),sOk:new ig.Sound('media/sounds/ok.*',false),sMove:new ig.Sound('media/sounds/move.*',false),sNoMoves:new ig.Sound('media/sounds/no_moves.*',false),debug:false,STATE:'intro',turn:0,team:1,teams:[{ai:true,score:0,bitcoins:8,moves:4,},{ai:true,score:0,bitcoins:8,moves:6,}],timer:new ig.Timer(),GUI:{leftTop:null,middleTop:null,rightTop:null,centerBottom:null,map:null,buttons:{blue:null,red:null},labels:{start:'enter',next:'spacebar',_1:'1',_2:'2',_3:'3',}},settings:{prices:{soldier:1.5,tank:3,helicopter:6},btcPerTurn:1,btcFromBase:1,},map:{},units:{},ruler:[2,6],menu:{'map':{cursor:[],position:0},'menu':{cursor:[],position:0},'game_menu':{cursor:[],position:0}},ai:true,sound:true,init:function(){console.log('\n\nWelcom to the Bit Wars ['+this.version+']\n\nSource code: https://github.com/w84death/BitWars/\n\n--- \n(c)2014 Krzysztof Jankowski\n');this.GUI.leftTop={x:16,y:8};this.GUI.centerTop={x:ig.system.width*0.5,y:8};this.GUI.rightTop={x:ig.system.width-16,y:8};this.GUI.centerMiddle={x:ig.system.width*0.5,y:ig.system.height*0.5};this.GUI.leftBottom={x:16,y:ig.system.height-8};this.GUI.centerBottom={x:ig.system.width*0.5,y:ig.system.height-8};this.GUI.rightBottom={x:ig.system.width-16,y:ig.system.height-8};this.GUI.map={x:ig.system.width*0.5,y:ig.system.height*0.5};this.GUI.buttons.blue={x:16,y:ig.system.height*0.5};this.GUI.buttons.red={x:ig.system.width-16,y:ig.system.height*0.5};this.menu['menu'].cursor.push(this.GUI.centerMiddle.y-42);this.menu['menu'].cursor.push(this.GUI.centerMiddle.y-30);this.menu['menu'].cursor.push(this.GUI.centerMiddle.y-18);this.menu['menu'].cursor.push(this.GUI.centerMiddle.y);this.menu['map'].cursor.push(this.GUI.centerMiddle.y-36);this.menu['map'].cursor.push(this.GUI.centerMiddle.y-24);this.menu['map'].cursor.push(this.GUI.centerMiddle.y-12);this.menu['game_menu'].cursor.push(this.GUI.centerMiddle.y-24);this.menu['game_menu'].cursor.push(this.GUI.centerMiddle.y-12);this.menu['game_menu'].cursor.push(this.GUI.centerMiddle.y);ig.input.bind(ig.KEY.LEFT_ARROW,'left');ig.input.bind(ig.KEY.RIGHT_ARROW,'right');ig.input.bind(ig.KEY.UP_ARROW,'up');ig.input.bind(ig.KEY.DOWN_ARROW,'down');ig.input.bind(ig.KEY._1,'buy_1');ig.input.bind(ig.KEY._2,'buy_2');ig.input.bind(ig.KEY._3,'buy_3');ig.input.bind(ig.KEY.SPACE,'next_turn');ig.input.bind(ig.KEY.ENTER,'action');ig.input.bind(ig.GAMEPAD.PAD_LEFT,'left');ig.input.bind(ig.GAMEPAD.PAD_RIGHT,'right');ig.input.bind(ig.GAMEPAD.PAD_TOP,'up');ig.input.bind(ig.GAMEPAD.PAD_BOTTOM,'down');ig.input.bind(ig.GAMEPAD.FACE_1,'next_turn');ig.input.bind(ig.GAMEPAD.FACE_2,'buy_3');ig.input.bind(ig.GAMEPAD.FACE_3,'buy_1');ig.input.bind(ig.GAMEPAD.FACE_4,'buy_2');ig.input.bind(ig.GAMEPAD.LEFT_SHOULDER,'action');ig.input.bind(ig.GAMEPAD.RIGHT_SHOULDER,'action');ig.music.add('media/music/menu.*','menu');ig.music.add('media/music/game.*','game');ig.music.volume=0.7;ig.music.loop=true;if(this.sound)ig.music.play('menu');this.fontWhite.letterSpacing=-1;this.fontWhite.lineSpacing=-2;this.fontColor.letterSpacing=-1;this.fontColor.lineSpacing=-2;this.fontRed.letterSpacing=-1;this.fontRed.lineSpacing=-2;this.fontBlue.letterSpacing=-1;this.fontBlue.lineSpacing=-2;},proceduralMap:function(params){var newProceduralMap=new ig.ProceduralMap();newProceduralMap.generate({prefs:{width:params.width,height:params.height,season:'summer'},dna:{trees:1,rocks:0.1,bases:4}})
this.map=newProceduralMap.get();this.map.pointZero={x:this.GUI.map.x-(this.map.blueprint.width*8),y:this.GUI.map.y-(this.map.blueprint.height*8)+8}},stateChange:function(state){if(this.sound)this.sOk.play();if(this.STATE=='intro'&&state=='menu'){this.STATE='menu';}
if(this.STATE=='menu'&&state=='map'){if(this.menu['menu'].position===3){this.sound=!this.sound;if(!this.sound){ig.music.stop();}
if(this.sound){ig.music.play();}
return}
if(this.menu['menu'].position===0){this.teams[0].ai=false;this.teams[1].ai=true;}
if(this.menu['menu'].position===1){this.teams[0].ai=false;this.teams[1].ai=false;}
if(this.menu['menu'].position===2){this.teams[0].ai=true;this.teams[1].ai=true;}
this.STATE='map';}
if(this.STATE=='map'&&state=='game'){ig.music.stop();if(this.sound)ig.music.play('game');ig.music.volume=0.4;var params={};if(this.menu['map'].position===0){params.width=9;params.height=4;}
if(this.menu['map'].position===1){params.width=11;params.height=5;}
if(this.menu['map'].position===2){params.width=13;params.height=7;}
this.STATE='game';this.ai=new ig.AI();this.proceduralMap(params);this.loadMap();}
if(this.STATE=='game'&&state=='game_menu'){this.menu['game_menu'].position=0;this.STATE='game_menu';}
if(this.STATE=='game_menu'&&state=='game'){this.STATE='game';}
if(this.STATE=='game'&&state=='game_over'){this.STATE='game_over';if(this.sound)ig.music.fadeOut(1)}
if((this.STATE=='game_over'&&state=='menu')||(this.STATE=='game_menu'&&state=='menu')){if(this.sound)ig.music.play('menu');ig.music.volume=0.7;this.ai=null;this.unloadMap();this.STATE='menu';}},unloadMap:function(){for(var i=0;i<this.entities.length;i++){this.entities[i].kill();}
this.turn=0;this.team=1;this.teams[0].score=0;this.teams[0].bitcoins=8;this.teams[0].moves=4;this.teams[1].score=0;this.teams[1].bitcoins=8;this.teams[1].moves=4;this.timer.set(0);},loadMap:function(){var newX=0,newY=0,name='';this.ruler=[2,this.map.blueprint.width-3];for(var x=0;x<this.map.blueprint.width;x++){for(var y=0;y<this.map.blueprint.height;y++){newX=(x*16)+this.map.pointZero.x;newY=(y*16)+this.map.pointZero.y;name='terrain_'+Math.random().toString();this.map.terrain[x][y].name=name;if(this.map.terrain[x][y].type===0){ig.game.spawnEntity(EntityGrass,newX,newY,{name:name});}
if(this.map.terrain[x][y].type===1){ig.game.spawnEntity(EntityTree,newX,newY,{name:name});}
if(this.map.terrain[x][y].type===2){ig.game.spawnEntity(EntityRock,newX,newY,{name:name});}
if(this.map.terrain[x][y].type===3){ig.game.spawnEntity(EntityGrass_left,newX,newY,{name:name});}
if(this.map.terrain[x][y].type===4){ig.game.spawnEntity(EntityGrass_right,newX,newY,{name:name});}
if(this.map.terrain[x][y].type===5){ig.game.spawnEntity(EntityBase,newX,newY,{name:name});}}}},buyUnit:function(params){var x,y,newX,newY,name,spots=[];for(var y=0;y<this.map.blueprint.height;y++){if(params.team===1&&!this.map.units[0][y]){spots.push(y);}
if(params.team===2&&!this.map.units[this.map.blueprint.width-1][y]){spots.push(y);}};if(spots.length<1&&params.unit!=='flag')return;if(params.unit!=='flag'){if(this.settings.prices[params.unit]<=this.teams[this.team-1].bitcoins){this.teams[this.team-1].bitcoins-=this.settings.prices[params.unit];}else{return;}}
if(params.unit=='flag'){x=params.team===1?this.map.blueprint.width-1:0;y=params.pos;}else{x=params.team===1?0:this.map.blueprint.width-1;y=spots[(Math.random()*(spots.length))<<0];}
newX=this.map.pointZero.x+(x*16);newY=this.map.pointZero.y+(y*16);name='unit_'+Math.random().toString();if(params.team===1){if(params.unit=='soldier'){ig.game.spawnEntity(EntitySoldier_blue,newX,newY,{name:name,turn:this.turn});}else
if(params.unit=='tank'){ig.game.spawnEntity(EntityTank_blue,newX,newY,{name:name,turn:this.turn});}else
if(params.unit=='helicopter'){ig.game.spawnEntity(EntityHelicopter_blue,newX,newY,{name:name,turn:this.turn});}else
if(params.unit=='flag'){ig.game.spawnEntity(EntityFlag_blue,newX,newY,{name:name,turn:this.turn});this.teams[0].score+=1;}}
if(params.team===2){if(params.unit=='soldier'){ig.game.spawnEntity(EntitySoldier_red,newX,newY,{name:name,turn:this.turn});}else
if(params.unit=='tank'){ig.game.spawnEntity(EntityTank_red,newX,newY,{name:name,turn:this.turn});}else
if(params.unit=='helicopter'){ig.game.spawnEntity(EntityHelicopter_red,newX,newY,{name:name,turn:this.turn});}
if(params.unit=='flag'){ig.game.spawnEntity(EntityFlag_red,newX,newY,{name:name,turn:this.turn});this.teams[1].score+=1;}}
this.map.units[x][y]=name;},renderCorners:function(){this.cornerSheet.drawTile(0,0,0,64,48);this.cornerSheet.drawTile(ig.system.width-64,0,1,64,48);this.cornerSheet.drawTile(0,ig.system.height-48,2,64,48);this.cornerSheet.drawTile(ig.system.width-64,ig.system.height-48,3,64,48);},renderMapFrame:function(){for(var x=0;x<this.map.blueprint.width;x++){for(var y=0;y<this.map.blueprint.height;y++){if(y==0){newX=(this.map.pointZero.x)+x*16;newY=(this.map.pointZero.y-16)+y*16;this.mapFrameSheet.drawTile(newX,newY,1,16,16);}
if(y==this.map.blueprint.height-1){newX=(this.map.pointZero.x)+x*16;newY=(this.map.pointZero.y+16)+y*16;this.mapFrameSheet.drawTile(newX,newY,7,16,16);}
if(x==0){newX=(this.map.pointZero.x-16)+x*16;newY=(this.map.pointZero.y)+y*16;this.mapFrameSheet.drawTile(newX,newY,3,16,16);}
if(x==this.map.blueprint.width-1){newX=(this.map.pointZero.x+16)+x*16;newY=(this.map.pointZero.y)+y*16;this.mapFrameSheet.drawTile(newX,newY,5,16,16);}
if(x==0&&y==0){newX=(this.map.pointZero.x-16)+x*16;newY=(this.map.pointZero.y-16)+y*16;this.mapFrameSheet.drawTile(newX,newY,0,16,16);}
if(x==this.map.blueprint.width-1&&y==0){newX=(this.map.pointZero.x+16)+x*16;newY=(this.map.pointZero.y-16)+y*16;this.mapFrameSheet.drawTile(newX,newY,2,16,16);}
if(x==0&&y==this.map.blueprint.height-1){newX=(this.map.pointZero.x-16)+x*16;newY=(this.map.pointZero.y+16)+y*16;this.mapFrameSheet.drawTile(newX,newY,6,16,16);}
if(x==this.map.blueprint.width-1&&y==this.map.blueprint.height-1){newX=(this.map.pointZero.x+16)+x*16;newY=(this.map.pointZero.y+16)+y*16;this.mapFrameSheet.drawTile(newX,newY,8,16,16);}}}},giveBTCtoPlayers:function(){var base=null;this.teams[0].bitcoins+=this.settings.btcPerTurn;this.teams[1].bitcoins+=this.settings.btcPerTurn;for(var x=0;x<this.map.blueprint.width;x++){for(var y=0;y<this.map.blueprint.height;y++){if(this.map.terrain[x][y].base){base=this.getEntityByName(this.map.terrain[x][y].name);if(base.team){this.teams[base.team-1].bitcoins+=this.settings.btcFromBase;}}}}},nextTurn:function(){if(this.teams[0].score>=this.map.blueprint.height||this.teams[1].score>=this.map.blueprint.height){this.stateChange('game_over');return;}
this.team+=1;if(this.team>2){this.team=1;this.turn+=1;this.giveBTCtoPlayers();this.teams[0].moves+=1;this.teams[1].moves+=1;}
if(this.teams[this.team-1].ai){this.ai.unlock();}},moveUnits:function(){var unit=false,unitsMoving=false,base=null,enemy=null,targetX;for(var x=0;x<this.map.blueprint.width;x++){for(var y=0;y<this.map.blueprint.height;y++){if(this.map.units[x][y]){unit=this.getEntityByName(this.map.units[x][y]);if(unit.turn==this.turn&&unit.team===this.team){if(!unit.flag){if(!unit.target){if(unit.team===1){targetX=x+1;}else{targetX=x-1;}
if(this.map.terrain[targetX][y].type<unit.terrain||this.map.terrain[targetX][y].type>2){if(this.map.units[targetX][y]){enemy=this.getEntityByName(this.map.units[targetX][y]);if(enemy.team!==unit.team&&!enemy.flag){unit.willAttack=true;unit.target=targetX;}else
if(enemy.team===unit.team||enemy.flag){unit.target=-999;unit.willAttack=false;unit.turn=this.turn+1;unit.vel.x=0;}}else{if(this.map.terrain[targetX][y].base&&!unit.helicopter){base=this.getEntityByName(this.map.terrain[targetX][y].name);if(base.team!==unit.team){unit.willCapture=true;}else{unit.willCapture=false;}}
unit.target=targetX;}}else{unit.target=-999;unit.willAttack=false;unit.turn=this.turn+1;unit.vel.x=0;}}}
if(unit.target>-1){if(unit.team===1&&this.map.pointZero.x+(unit.target*16)>unit.pos.x){unit.vel.x=unit.speed;unitsMoving=true;}else
if(unit.team===2&&this.map.pointZero.x+(unit.target*16)<unit.pos.x){unit.vel.x=-unit.speed;unitsMoving=true;}else{if((unit.team===2&&unit.target<1)||(unit.team===1&&unit.target>(this.map.blueprint.width-2))&&!this.map.units[unit.target][y]){this.buyUnit({team:unit.team,unit:'flag',pos:y});this.map.units[x][y]=false;unit.target=false;unit.willCapture=false;unit.kill();}else
if(unit.willCapture&&this.map.terrain[unit.target][y].name){var base=this.getEntityByName(this.map.terrain[unit.target][y].name);if(base){base.capture(unit.team);}
this.map.units[x][y]=false;unit.target=false;unit.willCapture=false;unit.kill();}else{if(unit.willAttack&&this.map.units[unit.target][y]){enemy=this.getEntityByName(this.map.units[unit.target][y]);if(enemy.power<unit.power){enemy.kill();this.map.units[unit.target][y]=false;}else
if(enemy.power==unit.power){enemy.kill();this.map.units[unit.target][y]=false;this.map.units[x][y]=false;unit.target=false;unit.willAttack=false;unit.willCapture=false;unit.kill();}else{this.map.units[x][y]=false;unit.target=false;unit.willAttack=false;unit.willCapture=false;unit.kill();}}
if(unit.target){if((unit.team===2&&unit.target<1)||(unit.team===1&&unit.target>(this.map.blueprint.width-2))){this.buyUnit({team:unit.team,unit:'flag',pos:y});this.map.units[x][y]=false;unit.kill();}else{unit.name=this.map.units[x][y];this.map.units[unit.target][y]=this.map.units[x][y];this.map.units[x][y]=false;unit.target=false;unit.turn=this.turn+1;unit.vel.x=0;unit.willCapture=false;unit.willAttack=false;}}}}}}}}};if(!unitsMoving){this.STATE='game';this.nextTurn();for(var x=0;x<this.map.blueprint.width;x++){for(var y=0;y<this.map.blueprint.height;y++){unit=this.getEntityByName(this.map.units[x][y]);if(unit){unit.target=false;unit.turn=this.turn;}}}}},moveRow:function(params){var temp={},tempUnit={},tile=null,unit=null,unitsInRow=0;for(var y=0;y<this.map.blueprint.height;y++){unit=this.getEntityByName(this.map.units[params.row][y]);if(unit&&unit.team!==this.team){unitsInRow+=1;}}
if(unitsInRow==0){if(this.teams[this.team-1].moves>0){this.teams[this.team-1].moves-=1;}else{if(!this.teams[this.team-1].ai&&this.sound)this.sNoMoves.play();return;}}
if(params.up&&unitsInRow==0){if(!this.teams[this.team-1].ai&&this.sound)this.sMove.play();temp.type=this.map.terrain[params.row][0].type;temp.name=this.map.terrain[params.row][0].name;temp.base=this.map.terrain[params.row][0].base;tempUnit=this.map.units[params.row][0];for(var y=1;y<this.map.blueprint.height;y++){tile=this.getEntityByName(this.map.terrain[params.row][y].name);if(this.map.units[params.row][y]){unit=this.getEntityByName(this.map.units[params.row][y]);unit.pos.y-=16;}
tile.pos.y-=16;this.map.terrain[params.row][y-1].type=this.map.terrain[params.row][y].type;this.map.terrain[params.row][y-1].name=this.map.terrain[params.row][y].name;this.map.terrain[params.row][y-1].base=this.map.terrain[params.row][y].base;this.map.units[params.row][y-1]=this.map.units[params.row][y];}
this.map.terrain[params.row][this.map.blueprint.height-1].type=temp.type;this.map.terrain[params.row][this.map.blueprint.height-1].name=temp.name;this.map.terrain[params.row][this.map.blueprint.height-1].base=temp.base;this.map.units[params.row][this.map.blueprint.height-1]=tempUnit;tile=this.getEntityByName(this.map.terrain[params.row][this.map.blueprint.height-1].name);if(this.map.units[params.row][this.map.blueprint.height-1]){unit=this.getEntityByName(this.map.units[params.row][this.map.blueprint.height-1]);unit.pos.y=this.map.pointZero.y+(this.map.blueprint.height-1)*16;}
tile.pos.y=this.map.pointZero.y+(this.map.blueprint.height-1)*16;temp={};unit={};}
if(params.down&&unitsInRow==0){if(!this.teams[this.team-1].ai&&this.sound)this.sMove.play();temp.type=this.map.terrain[params.row][this.map.blueprint.height-1].type;temp.name=this.map.terrain[params.row][this.map.blueprint.height-1].name;temp.base=this.map.terrain[params.row][this.map.blueprint.height-1].base;tempUnit=this.map.units[params.row][this.map.blueprint.height-1];for(var y=this.map.blueprint.height-2;y>-1;y--){tile=this.getEntityByName(this.map.terrain[params.row][y].name);tile.pos.y+=16;if(this.map.units[params.row][y]){unit=this.getEntityByName(this.map.units[params.row][y]);unit.pos.y+=16;}
this.map.terrain[params.row][y+1].type=this.map.terrain[params.row][y].type;this.map.terrain[params.row][y+1].name=this.map.terrain[params.row][y].name;this.map.terrain[params.row][y+1].base=this.map.terrain[params.row][y].base;this.map.units[params.row][y+1]=this.map.units[params.row][y];}
this.map.terrain[params.row][0].type=temp.type;this.map.terrain[params.row][0].name=temp.name;this.map.terrain[params.row][0].base=temp.base;this.map.units[params.row][0]=tempUnit;tile=this.getEntityByName(this.map.terrain[params.row][0].name);tile.pos.y=this.map.pointZero.y;if(this.map.units[params.row][0]){unit=this.getEntityByName(this.map.units[params.row][0]);unit.pos.y=this.map.pointZero.y;}
temp={};unit={};}},moveRuler:function(params){if(params.setRow){this.ruler[this.team-1]=params.setRow;}
if(params.right){this.ruler[this.team-1]+=1;if(this.ruler[this.team-1]>this.map.blueprint.width-2){this.ruler[this.team-1]=1;}
if(this.sound)this.sMenu.play();}
if(params.left){this.ruler[this.team-1]-=1;if(this.ruler[this.team-1]<1){this.ruler[this.team-1]=this.map.blueprint.width-2;}
if(this.sound)this.sMenu.play();}
if(params.up){this.moveRow({row:this.ruler[this.team-1],up:true});}
if(params.down){this.moveRow({row:this.ruler[this.team-1],down:true});}},moveCursor:function(params){if(this.sound)this.sMenu.play();if(params.up){this.menu[this.STATE].position-=1;if(this.menu[this.STATE].position<0){this.menu[this.STATE].position=this.menu[this.STATE].cursor.length-1;}}
if(params.down){this.menu[this.STATE].position+=1;if(this.menu[this.STATE].position>this.menu[this.STATE].cursor.length-1){this.menu[this.STATE].position=0;}}},update:function(){this.parent();if(this.STATE=='intro'){if(ig.input.released('action')||ig.input.released('next_turn')){this.stateChange('menu');return;}}
if(this.STATE=='menu'||this.STATE=='map'||this.STATE=='game_menu'){if(ig.input.released('up')){this.moveCursor({up:true});}
if(ig.input.released('down')){this.moveCursor({down:true});}
if(ig.input.released('action')||ig.input.released('next_turn')){if(this.STATE=='menu'){this.stateChange('map');}else
if(this.STATE=='map'){this.stateChange('game');}
if(this.STATE=='game_menu'){if(this.menu['game_menu'].position===0){this.stateChange('game');}
if(this.menu['game_menu'].position===1){this.stateChange('menu');}}
return;}}
if(this.STATE=='game'){if(ig.input.released('action')){this.stateChange('game_menu');}else
if(this.teams[this.team-1].ai){this.ai.think();if(this.ai.timer.delta()>0){this.STATE='move';}}else{if(ig.input.released('buy_1')){this.buyUnit({unit:'soldier',team:this.team});}
if(ig.input.released('buy_2')){this.buyUnit({unit:'tank',team:this.team});}
if(ig.input.released('buy_3')){this.buyUnit({unit:'helicopter',team:this.team});}
if(ig.input.released('next_turn')){this.STATE='move';}
if(ig.input.released('left')){this.moveRuler({left:true});}
if(ig.input.released('right')){this.moveRuler({right:true});}
if(ig.input.released('up')){this.moveRuler({up:true});}
if(ig.input.released('down')){this.moveRuler({down:true});}}}
if(this.STATE=='move'){this.moveUnits();}
if(this.STATE=='game_over'){if(ig.input.released('action')||ig.input.released('next_turn')){this.stateChange('menu');}}},drawRuler:function(){var newX,newY,tile;for(var y=-1;y<this.map.blueprint.height+1;y++){newX=(this.ruler[this.team-1]*16)+this.map.pointZero.x;newY=(y*16)+this.map.pointZero.y;tile=(this.team===1?2:5);if(y==-1)tile=(this.team===1?0:3);if(y>this.map.blueprint.height-1)tile=(this.team===1?1:4);this.rulerSheet.drawTile(newX,newY,tile,16,16);}},draw:function(){this.parent();if(this.STATE=='intro'){this.logoImage.draw(this.GUI.centerTop.x-24,this.GUI.centerTop.y+6);this.heroesImage.draw(this.GUI.centerTop.x-30,this.GUI.centerTop.y+48);this.fontWhite.draw('Version '+this.version,this.GUI.centerMiddle.x,this.GUI.centerMiddle.y,ig.Font.ALIGN.CENTER);if((this.timer.delta()*3).toFixed(0)%2==0){this.fontWhite.draw('PRESS '+this.GUI.labels.start,this.GUI.centerMiddle.x,this.GUI.centerMiddle.y+24,ig.Font.ALIGN.CENTER);}
this.fontColor.draw('Game design & code: Krzysztof Jankowski',this.GUI.centerBottom.x,this.GUI.centerBottom.y-34,ig.Font.ALIGN.CENTER);this.fontColor.draw('Music: NoSoapRadio',this.GUI.centerBottom.x,this.GUI.centerBottom.y-24,ig.Font.ALIGN.CENTER);this.fontColor.draw('(c) 2014 P1X Games',this.GUI.centerBottom.x,this.GUI.centerBottom.y-14,ig.Font.ALIGN.CENTER);}
if(this.STATE=='menu'||this.STATE=='map'){this.logoImage.draw(this.GUI.centerTop.x-24,this.GUI.centerTop.y+6);if(this.STATE=='map'){if(this.menu[this.STATE].position==0){this.fontColor.draw('SMALL 9x4 MAP',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[0],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('SMALL 9x4 MAP',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[0],ig.Font.ALIGN.CENTER);}
if(this.menu[this.STATE].position==1){this.fontColor.draw('NORMAL 11x5 MAP',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[1],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('NORMAL 11x5 MAP',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[1],ig.Font.ALIGN.CENTER);}
if(this.menu[this.STATE].position==2){this.fontColor.draw('BIG 13x7 MAP',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[2],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('BIG 13x7 MAP',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[2],ig.Font.ALIGN.CENTER);}}
if(this.STATE=='menu'){if(this.menu[this.STATE].position==0){this.fontColor.draw('HUMAN VS AI',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[0],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('HUMAN VS AI',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[0],ig.Font.ALIGN.CENTER);}
if(this.menu[this.STATE].position==1){this.fontColor.draw('HUMAN VS HUMAN',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[1],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('HUMAN VS HUMAN',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[1],ig.Font.ALIGN.CENTER);}
if(this.menu[this.STATE].position==2){this.fontColor.draw('AI VS AI',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[2],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('AI VS AI',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[2],ig.Font.ALIGN.CENTER);}
if(this.menu[this.STATE].position==3){if(this.sound){this.fontColor.draw('SOUND: ON',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[3],ig.Font.ALIGN.CENTER);}else{this.fontColor.draw('SOUND: OFF',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[3],ig.Font.ALIGN.CENTER);}}else{if(this.sound){this.fontWhite.draw('SOUND: ON',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[3],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('SOUND: OFF',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[3],ig.Font.ALIGN.CENTER);}}}
if(this.STATE=='menu'){this.spreadArmy.draw(this.GUI.centerMiddle.x-140,this.GUI.centerMiddle.y-35);}
if(this.STATE=='map'){this.spreadTerrain.draw(this.GUI.centerBottom.x-56,this.GUI.centerBottom.y-70);}}
if(this.STATE=='game'||this.STATE=='move'||this.STATE=='game_menu'||this.STATE=='game_over'){this.renderMapFrame();if(this.STATE=='game'){var newX,newY;newX=this.team===1?this.GUI.buttons.blue.x:this.GUI.buttons.red.x-32,newY=this.team===1?this.GUI.buttons.blue.y:this.GUI.buttons.red.y;this.fontWhite.draw('BUY UNITS:\nYOU HAVE: '+this.teams[this.team-1].bitcoins.toFixed(1),newX+14,newY-48,ig.Font.ALIGN.CENTER);this.buyButtonsSheet.drawTile(newX,newY-24,this.team-1,32,16);this.buyButtonsSheet.drawTile(newX,newY,this.team-1,32,16);this.buyButtonsSheet.drawTile(newX,newY+24,this.team-1,32,16);this.unitsSheet.drawTile(newX+2,newY-3-24,this.team===1?0:3,16,16);this.unitsSheet.drawTile(newX+2,newY-3,this.team===1?6:9,16,16);this.unitsSheet.drawTile(newX+2,newY-3+24,this.team===1?12:16,16,16);this.fontWhite.draw('['+this.GUI.labels._1+']',newX+2,newY+9-24,ig.Font.ALIGN.CENTER);this.fontWhite.draw('['+this.GUI.labels._2+']',newX+2,newY+9,ig.Font.ALIGN.CENTER);this.fontWhite.draw('['+this.GUI.labels._3+']',newX+2,newY+9+24,ig.Font.ALIGN.CENTER);if(this.settings.prices.soldier<=this.teams[this.team-1].bitcoins){this.fontWhite.draw(this.settings.prices.soldier,newX+24,newY+2-24,ig.Font.ALIGN.CENTER);}else{this.fontColor.draw(this.settings.prices.soldier,newX+24,newY+2-24,ig.Font.ALIGN.CENTER);}
if(this.settings.prices.tank<=this.teams[this.team-1].bitcoins){this.fontWhite.draw(this.settings.prices.tank,newX+24,newY+2,ig.Font.ALIGN.CENTER);}else{this.fontColor.draw(this.settings.prices.tank,newX+24,newY+2,ig.Font.ALIGN.CENTER);}
if(this.settings.prices.helicopter<=this.teams[this.team-1].bitcoins){this.fontWhite.draw(this.settings.prices.helicopter,newX+24,newY+2+24,ig.Font.ALIGN.CENTER);}else{this.fontColor.draw(this.settings.prices.helicopter,newX+24,newY+2+24,ig.Font.ALIGN.CENTER);}
newX=(this.team===1?this.GUI.buttons.blue.x+48:this.GUI.buttons.red.x-48);this.buyButtonsSheet.drawTile(newX-16,this.GUI.centerBottom.y-12,this.team-1,32,16);this.fontWhite.draw('['+this.GUI.labels.next+']',newX-12,this.GUI.centerBottom.y-3,ig.Font.ALIGN.RIGHT);this.fontWhite.draw('DONE',newX,this.GUI.centerBottom.y-9,ig.Font.ALIGN.CENTER);this.drawRuler();if(this.team===1){this.fontBlue.draw(this.teams[0].moves,(this.ruler[0]*16)+this.map.pointZero.x,this.map.pointZero.y+(this.map.blueprint.height*16)+8,ig.Font.ALIGN.CENTER);}else{this.fontRed.draw(this.teams[1].moves,(this.ruler[1]*16)+this.map.pointZero.x,this.map.pointZero.y+(this.map.blueprint.height*16)+8,ig.Font.ALIGN.CENTER);}}
if(this.STATE=='game_over'){this.fontWhite.draw('TEAM '+(this.teams[0].score>this.teams[1].score?'BLUE':'RED')+' WINS!',this.GUI.centerMiddle.x,this.GUI.centerMiddle.y,ig.Font.ALIGN.CENTER);if((this.timer.delta()*3).toFixed(0)%2==0){this.fontWhite.draw('PRESS '+this.GUI.labels.start,this.GUI.centerMiddle.x,this.GUI.centerMiddle.y+12,ig.Font.ALIGN.CENTER);}}
if(this.STATE=='game_menu'){if(this.menu[this.STATE].position==0){this.fontColor.draw('RESUME',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[0],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('RESUME',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[0],ig.Font.ALIGN.CENTER);}
if(this.menu[this.STATE].position==1){this.fontColor.draw('SURRENDER',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[1],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('SURRENDER',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[1],ig.Font.ALIGN.CENTER);}
if(this.menu[this.STATE].position==2){this.fontColor.draw('RESTART',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[2],ig.Font.ALIGN.CENTER);}else{this.fontWhite.draw('RESTART',this.GUI.centerMiddle.x,this.menu[this.STATE].cursor[2],ig.Font.ALIGN.CENTER);}}
this.heroesImage.drawTile(this.GUI.leftTop.x,this.GUI.leftTop.y,1,30,28);this.heroesImage.drawTile(this.GUI.rightTop.x-30,this.GUI.rightTop.y,0,30,28);this.fontBlue.draw(this.teams[0].score,this.GUI.leftTop.x,this.GUI.leftTop.y+22,ig.Font.ALIGN.LEFT);this.fontRed.draw(this.teams[1].score,this.GUI.rightTop.x,this.GUI.rightTop.y+22,ig.Font.ALIGN.RIGHT);this.fontWhite.draw('SUMMER',this.GUI.centerTop.x,this.GUI.centerTop.y,ig.Font.ALIGN.CENTER);this.fontWhite.draw('TURN - '+this.turn,this.GUI.centerTop.x,this.GUI.centerTop.y+10,ig.Font.ALIGN.CENTER);if(this.team===1){this.fontBlue.draw('TEAM BLUE TURN',this.GUI.centerTop.x,this.GUI.centerTop.y+20,ig.Font.ALIGN.CENTER);}else{this.fontRed.draw('TEAM RED TURN',this.GUI.centerTop.x,this.GUI.centerTop.y+20,ig.Font.ALIGN.CENTER);}}
this.renderCorners();}});var w=320,h=180,z=3,fps=24;ig.Sound.channels=16;var c=document.createElement('canvas');c.id='canvas';document.body.appendChild(c);ig.main('#canvas',MyGame,fps,w,h,z);});